services:
  nest-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: local
      DATABASE_USER: test
      DATABASE_PASSWORD: test
      MYSQL_HOST: mysql
      MYSQL_DATABASE: my_database
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      VERTUPAY_P2P_PASS: C2D7EC7EB8
      VERTUPAY_QRIS_PASS: 3A47291B32
      VERTUPAY_VA_PASS: 58197AE3B4
    command: npm run start:dev
    volumes:
      - .:/usr/src/app
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]  # Adjust the health endpoint as needed
      interval: 30s
      timeout: 10s
      retries: 5

  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: my_database
      MYSQL_USER: test
      MYSQL_PASSWORD: test
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:alpine
#  redis:
#    image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
#    ulimits:
#      memlock: -1
#      # For better performance, consider `host` mode instead `port` to avoid docker NAT.
#      # `host` mode is NOT currently supported in Swarm Mode.
#      # https://docs.docker.com/compose/compose-file/compose-file-v3/#network_mode
#      # network_mode: "host"

#  redis-commander:
#    image: rediscommander/redis-commander:latest
#    restart: always
#    environment:
#      REDIS_HOSTS: "local:redis:6379"
#    ports:
#      - "8001:8081"
#
#  db-visualizer:
#    image: ghcr.io/chartdb/chartdb:latest
#    ports:
#      - "8002:80"

volumes:
  mysql_data: