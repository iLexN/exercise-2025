var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiListRow.html",[0,0.028,1,2.054]],["body/classes/ApiListRow.html",[0,0.02,1,3.17,2,1.108,3,0.137,4,0.106,5,0.122,6,2.298,7,0.277,8,0.87,9,4.757,10,2.633,11,5.707,12,3.395,13,3.395,14,3.975,15,3.395,16,3.712,17,4.573,18,3.975,19,3.975,20,1.112,21,3.677,22,4.123,23,1.059,24,2.675,25,1.874,26,1.891,27,1.133,28,2.675,29,0.961,30,0.018,31,0.87,32,0.748,33,0.961,34,2.675,35,2.675,36,2.675,37,2.675,38,2.675,39,2.675,40,2.675,41,2.675,42,2.675,43,2.675,44,2.96,45,2.675,46,2.224,47,0.743,48,0.415,49,2.675,50,1.715,51,2.049,52,0.137,53,0.707,54,0.903,55,2.675,56,2.675,57,2.675,58,2.675,59,2.675,60,2.675,61,2.675,62,2.675,63,0.01,64,0.01]],["title/controllers/AppController.html",[65,2.054,66,2.576]],["body/controllers/AppController.html",[0,0.025,3,0.17,4,0.131,5,0.15,7,0.342,10,1.659,20,1.298,23,0.875,25,1.178,27,0.989,29,1.3,30,0.019,31,1.178,32,0.601,33,1.3,47,1.635,48,0.686,52,0.17,53,1.558,63,0.012,64,0.012,65,2.596,66,3.256,67,1.837,68,2.841,69,5.06,70,4.675,71,4.015,72,4.675,73,2.887,74,3.308,75,3.308,76,6.981,77,3.308,78,3.308,79,4.941,80,3.308,81,3.308,82,3.308,83,3.308,84,3.308,85,3.308,86,2.841,87,3.58,88,2.841,89,0.586,90,3.225,91,2.841,92,2.304,93,2.304,94,3.308,95,4.015,96,3.011,97,3.308,98,1.837,99,1.968,100,2.121,101,2.841,102,2.435,103,3.308,104,4.675,105,3.308,106,3.308,107,3.308,108,3.308,109,3.308,110,3.308,111,2.841,112,3.308,113,3.308,114,3.308]],["title/modules/AppModule.html",[115,1.188,116,2.576]],["body/modules/AppModule.html",[0,0.023,3,0.157,4,0.121,5,0.139,30,0.019,48,0.749,52,0.157,63,0.011,64,0.011,66,3.608,67,2.449,89,0.54,90,3.734,91,2.619,115,1.665,116,5.133,117,1.333,118,1.588,119,1.814,120,1.814,121,1.588,122,3.082,123,1.814,124,2.619,125,2.619,126,2.619,127,4.024,128,4.024,129,4.024,130,4.024,131,3.734,132,4.024,133,4.024,134,2.623,135,1.814,136,1.588,137,3.049,138,2.449,139,3.049,140,2.619,141,2.124,142,1.814,143,3.049,144,3.049,145,3.049,146,3.049,147,2.335,148,2.335,149,2.335,150,3.049,151,3.049,152,3.049,153,3.049,154,2.124,155,2.124,156,3.049,157,3.049,158,2.335,159,2.619,160,1.955,161,3.049,162,3.049,163,3.049,164,3.049,165,3.049,166,3.049,167,2.335,168,2.335,169,2.335,170,2.619,171,2.335,172,2.335]],["title/injectables/AppService.html",[90,2.2,173,0.556]],["body/injectables/AppService.html",[0,0.038,3,0.262,4,0.202,5,0.232,7,0.528,20,1.726,25,1.566,27,0.856,30,0.019,47,1.415,48,0.528,52,0.262,53,1.348,63,0.015,64,0.015,69,5.997,89,0.903,90,3.698,173,0.934,174,1.721,175,4.378,176,5.097,177,5.097,178,5.097]],["title/modules/AuthModule.html",[115,1.188,127,2.371]],["body/modules/AuthModule.html",[0,0.028,3,0.19,4,0.147,5,0.168,30,0.019,48,0.721,52,0.19,63,0.013,64,0.013,89,0.655,96,4.036,115,1.849,117,1.619,118,1.928,119,2.202,120,2.202,121,1.928,122,3.424,123,3.424,127,4.69,131,3.975,134,3.007,135,2.202,136,1.928,138,2.807,140,3.18,179,3.18,180,3.702,181,3.18,182,3.18,183,3.975,184,4.283,185,3.702,186,3.18,187,5.054,188,2.056,189,3.702,190,3.702,191,2.835,192,2.373,193,2.835,194,3.702,195,3.702,196,3.18,197,2.835,198,3.702,199,3.702,200,3.702]],["title/injectables/AuthService.html",[96,2.054,173,0.556]],["body/injectables/AuthService.html",[0,0.026,3,0.177,4,0.137,5,0.157,7,0.358,20,1.338,23,1.275,25,1.591,27,0.932,29,1.331,30,0.019,31,1.206,32,0.615,33,1.331,47,1.338,48,0.622,52,0.177,53,1.468,63,0.012,64,0.012,71,4.139,89,0.612,96,2.677,98,2.879,99,2.056,102,2.51,173,0.724,174,1.166,191,2.646,201,2.968,202,2.626,203,4.819,204,3.455,205,3.633,206,6.712,207,3.455,208,4.819,209,3.455,210,4.819,211,5.55,212,3.455,213,2.646,214,3.082,215,3.455,216,3.455,217,2.072,218,1.511,219,3.455,220,2.646,221,3.455,222,2.646,223,2.968,224,3.455,225,3.455,226,3.455]],["title/classes/CreateUserDto.html",[0,0.028,227,2.2]],["body/classes/CreateUserDto.html",[0,0.041,2,1.735,3,0.215,4,0.166,5,0.19,7,0.433,8,1.193,25,1.637,26,1.948,27,1.091,30,0.019,32,0.72,48,0.568,52,0.215,63,0.014,64,0.014,73,3.185,227,3.266,228,5.795,229,2.917,230,4.69,231,4.69,232,5.259,233,5.259,234,4.188,235,4.188,236,5.489,237,4.188,238,4.188,239,4.69,240,6.123,241,4.188,242,6.499,243,4.715,244,6.123,245,3.208,246,3.597]],["title/classes/DatabaseCredentials.html",[0,0.028,247,2.576]],["body/classes/DatabaseCredentials.html",[0,0.035,2,1.915,3,0.237,4,0.184,5,0.21,7,0.479,8,1.271,23,1.223,25,1.871,27,1.077,29,1.109,30,0.019,31,1.005,32,0.711,33,1.109,52,0.237,63,0.014,64,0.014,98,2.299,220,5.167,247,4.075,248,3.971,249,6.418,250,6.418,251,5.85,252,5.85,253,4.624,254,4.624,255,4.624]],["title/modules/DatabaseModule.html",[115,1.188,128,2.371]],["body/modules/DatabaseModule.html",[0,0.033,3,0.227,4,0.176,5,0.201,30,0.019,32,0.49,48,0.727,52,0.227,63,0.014,64,0.014,89,0.784,98,2.236,99,2.633,115,1.828,117,1.936,128,3.648,138,2.458,167,3.39,169,3.39,213,3.39,220,3.39,256,4.426,257,3.083,258,2.305,259,3.802,260,4.426,261,2.357,262,3.39,263,2.963,264,4.426,265,4.426,266,4.426,267,4.426,268,4.426,269,4.426,270,4.426,271,3.39,272,4.426,273,2.838,274,4.426,275,4.426,276,3.39,277,4.426,278,2.633,279,3.802,280,4.426,281,2.838]],["title/classes/FindAllUserDto.html",[0,0.028,282,2.576]],["body/classes/FindAllUserDto.html",[0,0.048,2,1.887,3,0.234,4,0.181,5,0.207,7,0.472,8,1.26,25,1.606,26,2.262,27,0.973,30,0.019,31,1.385,32,0.642,48,0.6,52,0.234,63,0.014,64,0.014,73,2.233,229,3.173,230,4.882,243,5.475,245,3.489,282,4.037,283,5.475,284,4.556,285,4.556,286,4.556,287,5.796,288,6.374,289,3.489,290,2.373,291,4.556]],["title/injectables/JwtAuthGuard.html",[100,2.371,173,0.556]],["body/injectables/JwtAuthGuard.html",[0,0.04,3,0.272,4,0.21,5,0.241,30,0.018,48,0.658,52,0.272,63,0.016,64,0.016,89,0.937,100,4.076,173,0.956,174,1.787,188,2.939,292,4.545,293,4.053,294,3.312,295,6.359,296,4.545]],["title/interfaces/JwtPayload.html",[297,1.38,298,2.576]],["body/interfaces/JwtPayload.html",[0,0.032,3,0.218,4,0.169,5,0.193,7,0.439,8,1.34,23,1.123,30,0.019,32,0.47,48,0.701,52,0.218,53,1.123,63,0.014,64,0.014,89,0.752,98,2.878,99,2.525,173,0.832,183,2.525,188,2.358,192,2.721,193,3.251,197,3.251,278,2.525,294,2.211,297,1.585,298,4.293,299,2.358,300,3.251,301,3.251,302,3.646,303,3.251,304,2.957,305,3.251,306,3.646,307,3.251,308,3.646,309,3.251,310,3.646,311,3.251,312,2.957,313,3.646,314,3.646,315,3.646,316,3.646,317,3.646,318,3.646]],["title/injectables/JwtStrategy.html",[173,0.556,183,2.2]],["body/injectables/JwtStrategy.html",[0,0.03,3,0.207,4,0.16,5,0.184,7,0.418,8,0.878,20,1.488,23,1.591,27,0.9,29,0.969,30,0.019,31,0.878,32,0.447,33,0.969,47,1.121,48,0.69,52,0.207,53,1.068,63,0.013,64,0.013,89,0.715,98,2.693,99,2.403,173,0.806,174,1.363,183,3.188,188,2.243,192,2.589,193,3.093,197,3.093,223,3.468,278,2.403,294,2.791,297,1.507,298,4.462,300,3.093,301,3.093,302,3.468,303,3.093,304,2.813,305,3.093,306,3.468,307,3.093,308,3.468,309,3.093,310,3.468,311,4.105,312,2.813,313,3.468,314,3.468,315,3.468,316,3.468,317,4.603,318,3.468,319,4.603,320,4.038,321,4.038]],["title/interfaces/ListContent.html",[297,1.38,322,2.371]],["body/interfaces/ListContent.html",[3,0.217,4,0.167,5,0.192,7,0.436,8,1.198,12,2.508,13,2.508,14,2.937,15,2.508,16,2.937,18,2.937,19,2.937,25,1.886,26,2.543,30,0.018,32,0.681,44,3.619,46,3.619,52,0.316,63,0.014,64,0.014,297,2.293,299,2.342,322,3.938,323,2.937,324,2.508,325,4.538,326,4.538,327,2.508,328,2.508,329,2.703,330,2.703,331,3.229,332,3.229,333,3.229,334,3.229,335,3.229,336,3.229,337,3.229]],["title/interfaces/ListRow.html",[44,2.054,297,1.38]],["body/interfaces/ListRow.html",[3,0.172,4,0.133,5,0.152,7,0.346,8,1.024,12,3.521,13,3.521,14,4.123,15,3.521,16,4.123,18,4.123,19,4.123,25,1.939,26,2.297,30,0.019,32,0.803,44,3.028,46,1.857,52,0.28,63,0.012,64,0.012,297,2.035,299,1.857,322,3.019,323,2.329,324,1.989,325,2.329,326,2.329,327,1.989,328,1.989,329,2.144,330,2.144,331,4.534,332,4.534,333,4.534,334,4.534,335,4.534,336,4.534,337,4.534]],["title/injectables/LocalAuthGuard.html",[93,2.576,173,0.556]],["body/injectables/LocalAuthGuard.html",[0,0.04,3,0.272,4,0.21,5,0.241,30,0.018,48,0.658,52,0.272,63,0.016,64,0.016,89,0.937,93,4.429,173,0.956,174,1.787,188,2.939,293,4.053,294,3.312,296,4.545,338,4.545,339,6.359]],["title/injectables/LocalStrategy.html",[173,0.556,184,2.371]],["body/injectables/LocalStrategy.html",[0,0.03,3,0.204,4,0.158,5,0.181,7,0.411,20,1.472,23,1.051,25,1.503,27,0.89,29,1.272,30,0.019,31,1.152,32,0.587,33,1.272,47,1.103,48,0.686,52,0.204,53,1.051,54,1.341,63,0.013,64,0.013,89,0.704,96,3.789,98,2.606,99,2.364,173,0.797,174,1.341,184,3.399,186,3.413,188,2.207,202,2.609,213,3.044,214,2.945,217,1.483,218,1.738,222,3.044,276,3.044,294,2.761,301,3.044,303,3.044,304,2.768,311,4.061,312,2.768,319,4.554,340,3.413,341,3.974,342,3.974,343,5.302,344,3.974,345,5.302,346,2.207,347,3.974,348,2.548]],["title/injectables/LoggerMiddleware.html",[173,0.556,349,2.576]],["body/injectables/LoggerMiddleware.html",[0,0.034,3,0.232,4,0.18,5,0.206,7,0.468,20,1.602,27,0.759,29,1.085,30,0.019,31,0.983,32,0.501,33,1.085,47,1.256,48,0.597,50,4.289,52,0.232,63,0.014,64,0.014,79,3.464,87,5.125,89,0.801,92,3.15,173,0.867,174,1.527,349,4.018,350,3.885,351,3.698,352,4.955,353,5.456,354,5.747,355,5.747,356,4.523,357,3.464,358,4.955,359,3.464,360,4.523,361,4.523,362,4.523]],["title/injectables/LoggerTimesMiddleware.html",[173,0.556,363,2.576]],["body/injectables/LoggerTimesMiddleware.html",[0,0.03,3,0.205,4,0.158,5,0.181,7,0.413,8,1.155,10,2.121,20,1.475,27,0.892,29,0.956,30,0.019,31,0.866,32,0.442,33,0.956,47,1.107,48,0.55,50,4.086,52,0.205,54,1.794,63,0.013,64,0.013,79,3.053,87,4.882,89,0.706,92,2.777,102,3.113,173,0.799,174,1.346,217,1.983,290,2.076,351,3.406,352,4.564,353,5.133,354,5.475,355,5.475,357,3.053,358,4.564,359,3.053,363,3.701,364,3.424,365,4.086,366,3.987,367,2.076,368,5.313,369,3.987,370,3.406,371,5.313,372,3.987,373,3.987,374,3.987,375,3.987,376,3.987,377,3.987]],["title/modules/MiddlewaresModule.html",[115,1.188,129,2.371]],["body/modules/MiddlewaresModule.html",[0,0.036,3,0.244,4,0.189,5,0.216,20,1.318,27,0.797,29,1.139,30,0.019,31,1.032,32,0.526,33,1.139,47,1.318,48,0.672,52,0.244,63,0.015,64,0.015,89,0.841,115,1.911,117,2.076,129,3.813,349,3.306,357,3.636,359,3.636,363,3.306,378,4.747,379,4.747,380,5.948,381,6.81,382,4.747,383,4.747,384,5.948,385,4.747,386,4.747,387,4.747,388,4.747]],["title/injectables/PayVertupayListener.html",[173,0.556,389,2.371]],["body/injectables/PayVertupayListener.html",[0,0.02,3,0.135,4,0.105,5,0.12,7,0.273,10,0.935,20,1.099,23,0.697,27,0.799,29,1.141,30,0.019,31,1.034,32,0.527,33,1.141,47,1.099,48,0.617,52,0.135,53,1.047,54,1.337,63,0.01,64,0.01,73,1.941,89,0.467,154,1.836,155,1.836,173,0.595,174,0.89,202,2.605,214,2.938,217,1.478,218,2.605,261,1.641,263,1.373,346,1.464,389,2.539,390,2.264,391,4.758,392,4.758,393,2.264,394,3.308,395,2.636,396,2.636,397,3.391,398,3.96,399,2.636,400,4.871,401,2.636,402,3.391,403,3.96,404,2.636,405,2.636,406,2.019,407,2.636,408,3.96,409,2.264,410,2.019,411,2.264,412,3.96,413,4.052,414,3.05,415,2.264,416,3.314,417,3.05,418,3.402,419,3.644,420,2.019,421,3.05,422,2.019,423,2.593,424,2.264,425,1.836,426,1.568,427,2.636,428,2.636,429,2.264,430,3.402,431,2.264,432,2.264,433,3.402,434,3.402,435,3.402,436,2.019,437,2.264,438,2.636,439,2.264,440,2.019,441,2.636,442,2.2,443,2.264,444,1.292]],["title/entities/Transactions.html",[263,1.926,445,2.054]],["body/entities/Transactions.html",[0,0.023,3,0.156,4,0.121,5,0.138,7,0.315,8,0.957,12,3.078,13,3.078,17,3.316,25,1.629,26,2.012,27,1.151,30,0.019,32,0.791,48,0.456,52,0.156,53,0.804,63,0.011,64,0.011,73,3.359,263,2.292,273,1.95,367,2.953,423,2.535,445,2.445,446,2.612,447,4.443,448,5.173,449,4.443,450,4.443,451,3.962,452,5.173,453,4.443,454,4.87,455,4.402,456,3.041,457,3.731,458,5.387,459,5.387,460,3.041,461,5.506,462,3.041,463,3.962,464,3.041,465,3.041,466,3.041,467,3.041,468,3.962,469,3.041,470,3.041,471,3.781,472,3.041,473,1.689,474,2.612,475,2.612,476,2.612]],["title/modules/TransactionsModule.html",[115,1.188,130,2.371]],["body/modules/TransactionsModule.html",[0,0.031,3,0.214,4,0.166,5,0.19,30,0.019,31,0.907,48,0.73,52,0.214,63,0.014,64,0.014,89,0.739,115,1.964,117,1.825,118,2.174,119,2.483,120,2.483,121,2.174,122,3.637,123,2.483,130,4.585,134,3.258,135,2.483,136,2.174,138,2.318,159,3.585,160,2.676,257,2.907,258,2.174,263,2.174,389,4.434,394,3.842,410,3.197,421,2.676,477,3.585,478,3.585,479,4.174,480,4.174,481,3.197,482,3.815,483,4.174,484,4.174,485,4.174]],["title/classes/TransactionsProcessor.html",[0,0.028,482,2.576]],["body/classes/TransactionsProcessor.html",[0,0.03,2,1.094,3,0.136,4,0.105,5,0.12,7,0.273,8,0.862,10,1.879,20,1.101,23,0.698,27,0.889,29,1.143,30,0.019,31,1.151,32,0.528,33,1.143,47,1.101,48,0.64,52,0.136,53,1.049,54,1.608,63,0.01,64,0.01,89,0.468,102,2.481,160,1.693,172,4.347,202,2.607,214,2.203,217,1.778,218,2.316,259,3.407,261,2.696,262,2.023,263,2.066,289,2.023,290,1.376,294,1.376,312,1.84,346,1.467,365,3.395,367,2.066,393,2.268,394,3.311,400,2.268,410,2.023,413,4.056,414,3.054,415,2.268,416,3.688,417,3.054,418,3.407,419,3.649,420,2.023,421,3.054,422,2.023,423,2.595,424,2.268,425,1.84,426,2.36,429,2.268,430,3.407,431,2.268,432,2.268,433,3.407,434,3.407,435,3.407,436,2.023,437,2.268,439,2.268,440,2.023,442,2.203,443,2.268,444,1.294,481,2.023,482,2.763,486,2.268,487,3.967,488,3.967,489,3.967,490,3.967,491,2.641,492,3.967,493,2.641,494,2.641,495,3.967,496,2.023,497,2.641,498,2.641,499,2.641,500,2.641,501,2.641,502,2.641,503,3.967,504,3.407,505,2.641,506,2.641,507,2.641,508,2.641,509,4.764,510,2.641,511,2.641,512,2.641,513,2.641,514,2.268]],["title/injectables/TransactionsService.html",[173,0.556,394,2.054]],["body/injectables/TransactionsService.html",[0,0.018,3,0.121,4,0.094,5,0.108,7,0.245,20,1.012,23,0.964,25,1.121,27,0.959,29,1.37,30,0.019,31,1.241,32,0.633,33,1.37,47,1.5,48,0.636,52,0.121,53,0.964,54,1.689,63,0.009,64,0.009,89,0.419,102,1.899,160,1.516,173,0.548,174,0.798,202,2.909,214,3.413,217,1.662,218,2.188,258,1.232,261,2.791,262,1.811,263,3.548,309,1.811,348,2.854,394,2.026,414,2.854,416,1.647,417,2.854,419,3.409,420,1.811,421,3.661,422,1.811,423,2.182,436,1.811,442,3.172,444,1.787,449,2.031,451,2.793,457,2.17,468,1.811,473,1.314,474,2.031,481,1.811,496,1.811,515,2.031,516,3.647,517,4.451,518,3.647,519,2.793,520,2.365,521,3.485,522,5.003,523,5.003,524,2.365,525,3.647,526,3.647,527,2.365,528,2.365,529,2.365,530,3.647,531,2.365,532,3.647,533,2.365,534,3.647,535,2.365,536,1.811,537,2.365,538,2.365,539,2.365,540,2.365,541,2.365,542,2.365,543,2.365,544,2.365,545,3.647,546,2.365,547,2.031,548,2.365,549,2.365,550,2.031,551,1.647,552,2.365,553,2.365,554,2.365,555,2.365,556,2.365,557,2.365,558,2.365,559,2.365,560,2.365,561,2.031,562,2.365,563,2.365,564,2.031,565,2.365,566,2.031,567,2.365,568,2.031,569,2.365,570,2.365]],["title/classes/UpdateUserDto.html",[0,0.028,571,2.371]],["body/classes/UpdateUserDto.html",[0,0.04,2,2.183,3,0.271,4,0.209,5,0.24,30,0.018,48,0.657,52,0.271,63,0.016,64,0.016,227,3.135,229,3.67,294,3.303,444,2.583,571,4.066,572,4.526,573,6.343,574,5.27,575,4.526,576,4.526,577,4.036]],["title/entities/User.html",[98,1.453,445,2.054]],["body/entities/User.html",[0,0.023,3,0.155,4,0.12,5,0.137,7,0.313,8,0.952,25,1.423,26,2.005,27,1.149,30,0.019,32,0.784,48,0.453,52,0.155,63,0.011,64,0.011,73,3.354,98,1.721,230,3.946,231,3.946,232,4.425,233,4.425,239,3.946,246,2.593,273,1.936,278,3.362,281,2.807,367,3.361,423,2.525,445,2.432,447,4.425,453,4.425,454,4.425,457,3.362,458,4.853,459,5.373,461,5.417,463,3.946,471,3.761,473,1.677,578,2.593,579,5.152,580,5.152,581,5.152,582,3.019,583,3.019,584,3.019,585,3.019,586,5.373,587,5.152,588,3.019,589,3.019,590,3.019,591,3.019,592,3.761,593,4.378,594,3.019,595,3.019]],["title/injectables/UsersConfig.html",[173,0.556,596,2.2]],["body/injectables/UsersConfig.html",[0,0.034,3,0.231,4,0.178,5,0.204,7,0.465,8,1.248,10,2.247,23,1.187,27,0.964,29,1.077,30,0.019,31,0.976,32,0.636,33,1.077,48,0.655,52,0.231,54,1.516,63,0.014,64,0.014,89,0.795,142,2.671,173,0.863,174,1.516,247,4.648,346,2.494,596,3.416,597,3.856,598,5.438,599,3.856,600,5.403,601,5.742,602,4.49,603,4.49,604,4.49,605,4.49]],["title/controllers/UsersController.html",[65,2.054,606,2.576]],["body/controllers/UsersController.html",[0,0.017,3,0.117,4,0.091,5,0.104,7,0.236,10,1.259,20,0.985,23,0.604,25,1.418,26,1.545,27,0.893,29,1.275,30,0.019,31,1.155,32,0.589,33,1.275,46,2.417,47,1.476,48,0.646,52,0.117,53,1.406,54,1.198,63,0.009,64,0.009,65,1.268,67,1.268,73,2.606,86,3.047,88,1.96,89,0.404,95,1.96,98,2.452,100,1.463,101,1.96,102,2.267,111,1.96,147,1.748,148,2.718,171,1.748,202,2.728,205,2.417,217,1.324,218,2.325,222,2.718,227,3.349,278,1.358,281,2.79,282,4.092,348,1.463,365,2.275,423,2.759,425,2.471,426,2.111,440,2.718,444,1.739,551,3.703,571,3.894,577,3.334,606,2.471,607,1.96,608,5.629,609,3.047,610,3.047,611,3.047,612,1.96,613,2.283,614,2.283,615,3.334,616,2.283,617,2.283,618,1.96,619,2.283,620,2.283,621,1.96,622,3.548,623,2.283,624,1.96,625,3.548,626,2.283,627,3.047,628,2.283,629,2.283,630,2.283,631,2.283,632,3.047,633,1.96,634,1.748,635,1.96,636,1.96,637,1.96,638,1.748,639,1.96,640,2.283,641,2.283,642,2.283,643,3.738,644,2.283,645,2.283,646,2.283,647,2.283,648,2.283,649,2.283,650,3.419,651,3.548,652,3.76,653,3.738,654,2.283,655,1.96,656,2.283,657,2.283,658,2.283,659,2.283,660,2.283,661,1.748,662,2.718,663,2.283,664,2.283,665,2.283,666,2.283,667,2.283,668,1.96,669,2.283,670,2.283,671,2.283,672,2.283,673,2.283]],["title/modules/UsersModule.html",[115,1.188,131,2.2]],["body/modules/UsersModule.html",[0,0.029,3,0.2,4,0.155,5,0.177,30,0.019,48,0.717,52,0.2,63,0.013,64,0.013,67,2.908,89,0.69,98,1.532,115,2.18,117,2.289,118,2.031,119,2.32,120,2.32,121,2.031,122,3.516,123,3.516,131,4.246,134,3.114,135,2.32,136,2.031,138,2.166,141,3.646,142,2.32,205,4.069,257,2.716,258,2.031,351,2.5,596,4.037,606,4.116,634,2.986,635,3.349,674,3.349,675,3.349,676,3.349,677,3.899,678,3.899,679,3.349,680,3.349,681,3.899,682,3.899,683,3.349,684,3.899,685,3.899]],["title/injectables/UsersService.html",[173,0.556,205,2.054]],["body/injectables/UsersService.html",[0,0.018,3,0.121,4,0.093,5,0.107,7,0.243,8,0.789,10,1.574,20,1.008,23,0.96,25,1.358,26,2.234,27,1.03,29,1.367,30,0.019,31,1.397,32,0.631,33,1.367,47,1.582,48,0.615,52,0.121,53,1.507,54,1.684,63,0.009,64,0.009,89,0.416,98,2.474,102,2.808,173,0.546,174,0.794,202,1.94,205,2.017,217,1.355,218,1.588,227,3.207,231,1.801,258,1.225,271,1.801,290,1.225,365,3.198,367,1.225,423,3.085,426,2.16,444,2.174,473,1.306,519,1.801,521,3.474,536,1.801,571,3.807,577,2.781,596,3.39,609,4.284,610,3.809,611,3.119,612,3.119,615,1.801,618,3.119,621,3.119,624,3.119,636,2.02,637,2.02,650,1.638,655,2.02,679,2.02,680,2.02,686,2.02,687,4.435,688,2.352,689,4.435,690,3.631,691,2.352,692,2.352,693,3.631,694,2.352,695,2.352,696,2.352,697,2.352,698,3.631,699,2.352,700,3.631,701,3.809,702,2.352,703,2.352,704,3.631,705,2.781,706,2.352,707,2.352,708,2.352,709,2.352,710,2.352,711,2.352,712,2.352,713,2.352,714,2.352,715,2.352,716,2.352,717,2.352,718,2.352,719,2.02,720,2.352,721,3.119,722,3.631,723,2.352,724,2.352,725,2.352,726,3.631,727,3.631,728,2.352,729,3.631,730,1.801,731,2.352]],["title/modules/UtilityModule.html",[115,1.188,132,2.371]],["body/modules/UtilityModule.html",[0,0.041,3,0.284,4,0.22,5,0.251,30,0.018,48,0.572,52,0.284,63,0.016,64,0.016,89,0.979,115,2.097,117,2.417,132,4.183,732,5.527]],["title/entities/Vertupay.html",[261,1.532,445,2.054]],["body/entities/Vertupay.html",[0,0.021,1,2.726,3,0.143,4,0.11,5,0.126,7,0.287,8,0.895,12,2.92,13,2.92,17,3.146,21,2.127,25,1.784,26,1.926,27,1.126,30,0.019,32,0.743,48,0.508,51,2.127,52,0.143,53,1.089,54,0.937,63,0.01,64,0.01,73,3.289,217,1.036,261,2.516,273,1.78,416,1.934,423,2.405,445,2.287,450,4.215,461,5.554,463,3.759,473,1.542,475,2.385,476,2.385,550,2.385,561,2.385,564,2.385,566,2.385,568,2.385,733,2.385,734,4.908,735,4.908,736,4.908,737,4.908,738,4.215,739,4.908,740,2.777,741,2.777,742,2.777,743,2.777,744,2.777,745,2.777,746,2.777,747,2.777,748,2.777,749,2.777,750,1.934,751,2.777,752,2.777,753,4.118,754,2.777,755,4.118,756,2.777,757,4.118,758,2.777,759,4.118,760,2.777,761,4.118,762,2.777,763,4.118,764,2.777,765,4.118,766,2.777,767,4.118,768,2.777,769,4.118,770,2.777,771,2.777,772,2.777,773,2.777]],["title/classes/VertupayAccountBalanceDto.html",[0,0.028,774,2.2]],["body/classes/VertupayAccountBalanceDto.html",[0,0.026,2,1.447,3,0.179,4,0.139,5,0.159,7,0.362,8,1.056,9,4.208,10,2.329,20,1.348,21,4.276,22,4.795,23,1.284,26,2.573,27,1.102,29,1.165,30,0.019,31,1.056,32,0.668,33,1.165,47,1.55,48,0.362,50,2.24,52,0.179,53,1.476,54,1.18,63,0.012,64,0.012,136,2.53,774,3.773,775,5.783,776,3.001,777,6.034,778,6.341,779,4.203,780,3.494,781,3.494,782,3.494,783,3.494,784,3.494,785,4.857,786,3.494,787,3.905,788,3.494,789,3.494,790,3.494,791,4.857,792,4.857,793,3.494,794,3.494,795,3.494]],["title/classes/VertupayAccountDto.html",[0,0.028,796,2.054]],["body/classes/VertupayAccountDto.html",[0,0.032,2,1.789,3,0.222,4,0.172,5,0.196,7,0.447,8,1.217,9,4.476,10,2.477,15,3.912,20,1.555,23,1.481,25,1.85,27,1.104,29,1.036,30,0.018,31,0.939,32,0.689,33,1.036,47,1.199,52,0.222,53,1.142,63,0.014,64,0.014,796,3.11,797,3.709,798,5.852,799,6.576,800,4.319,801,4.319,802,4.319,803,4.319,804,4.319,805,4.319]],["title/injectables/VertupayAccountFactory.html",[173,0.556,806,2.2]],["body/injectables/VertupayAccountFactory.html",[0,0.029,3,0.202,4,0.156,5,0.178,7,0.406,20,1.459,23,1.038,27,0.882,29,0.941,30,0.019,31,0.853,32,0.435,33,0.941,47,1.089,48,0.614,52,0.202,53,1.038,54,1.325,63,0.013,64,0.013,89,0.695,142,2.334,173,0.79,174,1.325,217,2.364,346,2.179,423,3.236,599,3.37,600,5.206,796,3.518,798,5.44,806,3.128,807,5.092,808,3.37,809,6.333,810,3.924,811,3.924,812,2.733,813,4.027,814,5.257,815,3.924,816,3.924,817,3.924,818,3.924,819,3.924,820,3.924,821,3.005,822,3.924,823,3.924]],["title/injectables/VertupayApiClient.html",[173,0.556,824,2.2]],["body/injectables/VertupayApiClient.html",[0,0.022,1,2.837,3,0.094,4,0.073,5,0.083,7,0.189,10,0.649,15,1.77,17,1.173,20,0.826,23,0.484,25,1.201,26,2.166,27,0.8,29,1.144,30,0.019,31,1.036,32,0.597,33,1.144,44,1.653,46,3.117,47,1.203,48,0.655,50,3.452,51,1.401,52,0.094,53,1.351,54,1.004,63,0.007,64,0.007,89,0.324,173,0.447,174,0.618,202,2.234,214,2.406,217,2.506,218,1.645,290,0.953,325,3.558,326,2.619,327,1.088,328,2.237,346,1.016,348,1.907,351,1.173,367,0.953,370,2.777,414,1.907,417,1.907,442,2.406,451,3.913,457,3.039,586,2.556,627,1.571,701,3.23,750,1.274,774,1.088,779,3.017,787,1.088,796,2.991,812,1.274,821,3.318,824,1.77,825,4.388,826,1.571,827,3.318,828,2.975,829,2.975,830,1.83,831,5.109,832,1.83,833,1.571,834,1.83,835,1.571,836,3.318,837,3.651,838,1.83,839,2.975,840,1.83,841,1.83,842,2.975,843,1.83,844,2.975,845,1.83,846,1.83,847,1.401,848,3.761,849,1.571,850,1.401,851,1.83,852,3.275,853,1.83,854,4.767,855,1.571,856,1.401,857,1.401,858,1.83,859,1.83,860,5.109,861,2.975,862,1.83,863,4.332,864,2.975,865,2.975,866,2.975,867,1.83,868,1.83,869,1.83,870,1.571,871,1.83,872,1.83,873,1.83,874,2.975,875,2.975,876,1.83,877,1.83,878,1.83,879,1.83,880,1.83,881,2.279,882,2.556,883,1.83,884,1.83,885,1.83,886,1.83,887,2.975,888,1.83,889,1.83,890,1.83,891,1.83,892,1.83,893,1.83,894,1.83,895,1.83,896,1.83,897,1.83,898,1.83,899,1.83,900,1.83,901,1.83,902,1.83,903,1.83,904,2.975,905,1.83,906,1.83,907,1.83]],["title/classes/VertupayApiError.html",[0,0.028,852,2.371]],["body/classes/VertupayApiError.html",[0,0.038,2,2.112,3,0.262,4,0.202,5,0.232,23,1.348,25,1.689,27,0.856,29,1.223,30,0.018,31,1.108,32,0.565,33,1.223,52,0.262,63,0.015,64,0.015,294,3.237,442,3.452,650,3.55,852,4.299,908,4.378,909,6.216,910,5.097,911,5.097,912,5.097]],["title/interfaces/VertupayBalanceResponse.html",[297,1.38,787,2.2]],["body/interfaces/VertupayBalanceResponse.html",[3,0.246,4,0.19,5,0.218,7,0.495,8,1.299,25,1.642,26,2.494,30,0.018,32,0.722,52,0.307,63,0.015,64,0.015,297,2.231,299,2.657,324,2.846,328,4.063,329,4.378,330,4.378,787,3.556,913,3.664,914,4.756,915,4.109,916,4.109]],["title/controllers/VertupayController.html",[65,2.054,917,2.576]],["body/controllers/VertupayController.html",[0,0.021,1,2.279,3,0.142,4,0.11,5,0.126,7,0.286,10,0.981,20,1.139,27,0.689,30,0.019,46,2.279,47,1.139,48,0.65,52,0.142,53,1.085,54,1.954,63,0.01,64,0.01,65,1.535,67,1.535,73,2.011,89,0.489,171,2.117,202,2.651,217,2.343,218,2.141,261,1.145,278,2.912,281,2.631,346,1.535,348,3.138,370,2.631,414,3.138,417,3.138,425,1.925,442,3.367,457,1.645,551,4.223,598,2.374,615,3.143,632,4.652,633,2.374,638,2.117,639,2.374,650,4.031,652,4.432,653,3.525,661,2.117,662,3.143,668,4.204,705,2.117,750,1.925,774,2.442,779,3.773,796,2.279,812,1.925,813,3.143,827,4.149,836,3.143,837,2.117,852,3.472,856,2.117,857,2.117,917,2.859,918,2.374,919,2.764,920,4.104,921,2.764,922,2.912,923,2.374,924,2.764,925,4.104,926,4.895,927,2.764,928,2.764,929,2.764,930,2.764,931,4.104,932,4.104,933,4.895,934,2.374,935,2.374,936,4.204,937,2.764,938,2.764,939,2.764,940,2.764,941,2.764,942,2.764]],["title/interfaces/VertupayFundInOut.html",[297,1.38,914,2.576]],["body/interfaces/VertupayFundInOut.html",[3,0.252,4,0.195,5,0.224,7,0.509,8,1.321,25,1.238,26,2.596,30,0.018,32,0.673,52,0.312,63,0.015,64,0.015,297,2.269,299,2.73,324,2.925,328,2.925,329,3.151,330,3.151,787,2.925,913,3.765,914,4.597,915,5.922,916,5.922]],["title/interfaces/VertupayListResponse.html",[297,1.38,327,2.2]],["body/interfaces/VertupayListResponse.html",[3,0.217,4,0.167,5,0.192,7,0.436,8,1.198,12,2.508,13,2.508,14,2.937,15,2.508,16,2.937,18,2.937,19,2.937,25,1.9,26,2.461,30,0.018,32,0.681,44,3.062,46,2.342,52,0.316,63,0.014,64,0.014,297,2.293,299,2.342,322,4.177,323,2.937,324,2.508,325,2.937,326,2.937,327,3.28,328,3.876,329,4.177,330,4.177,331,3.229,332,3.229,333,3.229,334,3.229,335,3.229,336,3.229,337,3.229]],["title/modules/VertupayModule.html",[115,1.188,133,2.371]],["body/modules/VertupayModule.html",[0,0.029,3,0.202,4,0.156,5,0.178,30,0.019,48,0.74,52,0.202,63,0.013,64,0.013,67,2.92,89,0.695,115,1.905,117,1.716,118,2.044,119,2.334,120,2.334,121,2.044,122,3.527,123,2.334,133,4.629,134,3.128,135,2.334,136,2.044,138,2.179,141,3.662,142,2.334,257,2.733,258,2.044,261,1.625,806,4.044,824,4.044,847,3.005,917,4.13,922,4.044,923,3.37,943,3.37,944,3.37,945,3.924,946,3.37,947,3.37,948,3.924,949,3.37,950,3.37,951,5.257,952,2.733,953,3.924]],["title/classes/VertupayPayCreatedEvent.html",[0,0.028,397,2.371]],["body/classes/VertupayPayCreatedEvent.html",[0,0.036,2,1.989,3,0.247,4,0.191,5,0.218,7,0.497,8,1.302,9,3.841,10,2.317,23,1.27,27,1.006,29,1.152,30,0.018,31,1.044,32,0.664,33,1.152,48,0.497,52,0.247,63,0.015,64,0.015,261,2.915,397,3.841,952,3.345,954,5.002,955,4.124,956,5.873,957,4.124,958,4.802,959,4.802,960,4.124]],["title/classes/VertupayPayUpdatedEvent.html",[0,0.028,402,2.371]],["body/classes/VertupayPayUpdatedEvent.html",[0,0.036,2,1.989,3,0.247,4,0.191,5,0.218,7,0.497,8,1.302,9,3.841,10,2.317,23,1.27,27,1.006,29,1.152,30,0.018,31,1.044,32,0.664,33,1.152,48,0.497,52,0.247,63,0.015,64,0.015,261,2.915,402,3.841,952,3.345,954,5.002,956,5.873,957,4.124,960,4.124,961,4.124,962,4.802,963,4.802]],["title/injectables/VertupayService.html",[173,0.556,922,2.2]],["body/injectables/VertupayService.html",[0,0.014,1,2.65,3,0.094,4,0.073,5,0.083,7,0.19,8,0.647,10,1.693,20,0.827,23,0.788,27,0.904,29,1.04,30,0.019,31,0.942,32,0.48,33,1.04,47,1.324,48,0.682,52,0.094,53,0.996,54,1.819,63,0.007,64,0.007,89,0.324,102,2.806,154,1.276,155,1.276,158,1.403,173,0.448,174,0.619,202,2.723,214,2.839,217,2.279,218,2.455,258,0.954,261,2.118,271,1.403,290,0.954,365,2.78,367,0.954,370,3.277,397,1.175,402,1.175,406,1.403,409,1.574,411,1.574,413,2.282,421,1.175,426,1.772,444,0.898,457,3.205,473,2.091,504,2.559,514,2.559,519,1.403,521,3.02,536,1.403,661,1.403,662,2.282,705,1.403,730,2.282,738,1.574,750,1.276,774,1.09,779,2.622,796,3.314,806,3.041,812,1.276,813,1.403,821,3.321,824,3.205,827,2.883,833,1.574,835,1.574,836,3.916,837,2.883,856,1.403,857,1.403,881,1.403,882,2.559,922,1.772,934,1.574,935,1.574,936,1.574,946,1.574,947,1.574,949,1.574,950,1.574,952,1.276,964,1.574,965,4.336,966,4.336,967,2.979,968,1.832,969,3.764,970,3.764,971,4.336,972,2.979,973,1.832,974,1.832,975,1.832,976,1.832,977,2.979,978,1.832,979,2.979,980,1.832,981,2.979,982,1.832,983,1.832,984,1.574,985,1.832,986,1.832,987,1.832,988,1.832,989,1.832,990,1.832,991,1.832,992,1.832,993,1.832,994,1.832,995,1.832,996,2.979,997,2.979,998,1.832,999,1.832,1000,1.832,1001,1.832,1002,1.832,1003,1.832,1004,1.832,1005,1.832,1006,1.832,1007,1.832,1008,1.832,1009,2.979,1010,2.979,1011,2.979,1012,1.832,1013,1.832,1014,1.832,1015,1.832,1016,1.832,1017,1.832,1018,1.832,1019,1.832,1020,2.979,1021,2.979,1022,2.559,1023,2.979,1024,1.832,1025,1.832,1026,2.979,1027,1.832,1028,1.832,1029,2.979,1030,1.832,1031,1.832,1032,1.832,1033,1.832,1034,1.832,1035,2.979,1036,1.832,1037,1.832,1038,1.832,1039,1.832,1040,1.832,1041,1.832,1042,1.832,1043,1.832,1044,1.832]],["title/coverage.html",[1045,3.869]],["body/coverage.html",[0,0.05,1,1.425,5,0.117,6,2.203,30,0.019,32,0.284,44,1.425,54,0.866,63,0.01,64,0.01,65,2.599,66,1.786,68,2.203,90,1.526,93,1.786,96,1.425,98,1.008,100,1.644,121,1.336,149,1.965,173,1.05,175,2.203,183,1.526,184,1.644,192,1.644,201,2.203,205,1.425,227,1.526,228,2.203,229,3.26,247,1.786,248,2.203,261,1.063,263,1.336,282,1.786,283,2.203,292,2.203,293,2.972,297,2.201,298,1.786,300,2.972,322,1.644,323,3.26,324,3.334,327,1.526,338,2.203,340,2.203,349,1.786,350,2.203,363,1.786,364,2.203,389,1.644,390,2.203,394,1.425,397,1.644,402,1.644,445,2.599,446,2.203,482,1.786,486,2.203,515,2.203,571,1.644,572,2.203,578,2.203,596,1.526,597,2.203,606,1.786,607,2.203,686,2.203,733,2.203,774,1.526,775,2.203,776,2.203,787,1.526,796,1.425,797,2.203,806,1.526,807,2.203,808,2.203,824,1.526,825,2.203,826,2.203,850,1.965,852,1.644,908,2.203,913,2.972,914,1.786,917,1.786,918,2.203,922,1.526,954,2.972,955,2.203,961,2.203,964,2.203,1022,6.514,1045,1.965,1046,2.203,1047,2.565,1048,2.565,1049,5.218,1050,5.218,1051,5.896,1052,2.203,1053,4.68,1054,6.579,1055,6.579,1056,2.203,1057,2.565,1058,2.203,1059,3.88,1060,3.88,1061,2.565,1062,2.203,1063,2.565,1064,2.565,1065,2.565,1066,2.565,1067,2.565]],["title/dependencies.html",[118,2.317,1068,2.651]],["body/dependencies.html",[0,0.041,30,0.019,63,0.013,64,0.013,89,0.724,92,2.85,118,2.131,142,2.434,147,3.134,148,4.637,154,2.85,155,2.85,158,3.134,160,2.623,168,3.134,188,2.272,191,3.134,245,3.134,258,2.131,276,3.134,289,3.134,304,4.217,305,3.134,473,2.272,496,3.134,575,3.514,576,3.514,643,4.643,847,3.134,849,3.514,855,3.514,1069,4.091,1070,4.091,1071,4.091,1072,4.091,1073,6.054,1074,6.054,1075,4.091,1076,4.091,1077,5.406,1078,4.091,1079,4.091,1080,4.091,1081,4.091,1082,4.091,1083,4.091,1084,3.514,1085,4.091,1086,4.091,1087,4.091,1088,4.091,1089,4.091,1090,4.091,1091,4.091,1092,4.091,1093,4.091,1094,4.091,1095,4.091,1096,4.091]],["title/miscellaneous/enumerations.html",[1097,1.836,1098,3.821]],["body/miscellaneous/enumerations.html",[7,0.475,17,3.733,30,0.019,63,0.014,64,0.014,239,4.46,290,3.864,406,4.46,426,2.73,442,2.549,444,2.249,468,4.46,547,5.001,551,3.197,638,4.46,1097,2.73,1098,3.942,1099,5.823,1100,4.589,1101,4.589,1102,4.589,1103,4.589,1104,5.823,1105,5.823,1106,5.823,1107,4.589,1108,4.589,1109,4.589,1110,4.589,1111,5.823,1112,5.823,1113,4.589,1114,4.589,1115,4.589]],["title/miscellaneous/functions.html",[1097,1.836,1116,3.821]],["body/miscellaneous/functions.html",[7,0.593,30,0.017,63,0.017,64,0.017,121,3.671,1056,4.922,1097,3.409,1116,4.922,1117,5.731]],["title/index.html",[7,0.319,1118,3.087,1119,3.087]],["body/index.html",[4,0.11,30,0.018,63,0.01,64,0.01,136,3.16,172,3.149,279,3.531,307,2.122,370,1.776,521,1.93,592,2.38,719,4.657,721,4.21,730,2.122,881,2.122,984,2.38,1045,2.122,1046,3.531,1120,2.771,1121,2.771,1122,4.901,1123,4.111,1124,2.771,1125,2.771,1126,2.771,1127,2.771,1128,4.111,1129,2.38,1130,2.771,1131,2.771,1132,5.423,1133,2.771,1134,6.452,1135,2.771,1136,6.282,1137,2.771,1138,2.771,1139,4.111,1140,2.771,1141,2.771,1142,4.901,1143,2.771,1144,4.111,1145,2.771,1146,2.771,1147,2.771,1148,2.771,1149,2.771,1150,5.423,1151,6.452,1152,6.068,1153,2.771,1154,4.111,1155,2.771,1156,2.771,1157,2.771,1158,2.771,1159,6.068,1160,4.111,1161,5.423,1162,2.771,1163,4.111,1164,2.771,1165,4.111,1166,5.792,1167,5.423,1168,2.771,1169,4.111,1170,2.771,1171,2.771,1172,2.771,1173,2.771,1174,5.423,1175,2.771,1176,2.771,1177,2.771,1178,2.771,1179,4.111,1180,2.771,1181,2.771,1182,2.771,1183,2.771,1184,2.771,1185,4.111,1186,2.771,1187,2.771,1188,2.771,1189,4.111,1190,2.771,1191,2.771,1192,4.657,1193,4.111,1194,2.771,1195,2.771,1196,2.771,1197,2.771,1198,2.771,1199,2.771,1200,2.771,1201,2.771,1202,4.111,1203,2.771,1204,2.38,1205,2.771,1206,2.771,1207,4.901,1208,2.771,1209,2.771,1210,2.771,1211,2.771,1212,2.771,1213,4.111,1214,2.771,1215,2.771,1216,2.771,1217,2.771,1218,2.771,1219,2.771,1220,2.771,1221,4.111,1222,4.111,1223,2.771,1224,2.771,1225,2.771,1226,2.771,1227,2.771,1228,2.771,1229,2.771,1230,2.771,1231,2.771,1232,2.771,1233,2.771,1234,2.38,1235,2.771,1236,2.771,1237,2.771,1238,2.771,1239,2.771,1240,2.771,1241,2.38]],["title/modules.html",[117,2.209]],["body/modules.html",[30,0.015,63,0.015,64,0.015,116,3.507,117,2.202,127,3.228,128,3.228,129,3.228,130,3.228,131,2.996,132,3.228,133,3.228,1192,6.127,1204,5.729,1242,7.134,1243,7.134,1244,7.424,1245,6.671]],["title/overview.html",[1246,4.338]],["body/overview.html",[2,1.385,30,0.019,63,0.012,64,0.012,67,1.857,90,3.244,96,3.694,115,1.074,116,5.151,117,1.462,118,1.741,119,1.989,120,1.989,121,1.741,122,1.989,123,1.989,124,2.872,125,2.872,126,2.872,127,4.578,128,3.495,129,3.495,130,4.264,131,4.107,132,3.495,133,4.426,134,2.802,135,1.989,136,1.741,174,1.129,179,2.872,181,2.872,182,2.872,183,3.244,184,3.495,205,3.694,273,2.144,299,1.857,389,3.495,394,3.028,477,2.872,478,2.872,596,3.244,674,2.872,675,2.872,676,2.872,806,3.244,824,3.244,922,3.244,943,2.872,944,2.872,1246,2.872,1247,3.344,1248,4.71,1249,3.344,1250,3.344,1251,3.344]],["title/properties.html",[8,0.967,1068,2.651]],["body/properties.html",[8,1.228,30,0.018,63,0.016,64,0.016,1129,4.855,1234,4.855,1241,4.855,1252,5.653,1253,5.653,1254,5.653]],["title/miscellaneous/variables.html",[1097,1.836,1255,3.821]],["body/miscellaneous/variables.html",[4,0.164,7,0.428,30,0.019,32,0.603,53,1.093,63,0.013,64,0.013,138,2.295,141,2.878,149,4.168,167,3.165,168,3.165,169,3.165,170,3.549,192,3.488,196,4.673,202,1.807,217,2.031,218,1.807,281,3.488,290,3.367,351,2.649,367,3.168,444,2.025,600,4.66,634,3.165,652,3.165,683,3.549,850,4.168,870,3.549,1052,3.549,1058,3.549,1062,3.549,1084,5.225,1097,2.458,1255,3.549,1256,4.132,1257,4.132,1258,4.132,1259,4.132,1260,4.132,1261,4.132,1262,4.132,1263,4.132,1264,5.441,1265,4.132,1266,4.132,1267,4.132,1268,4.132,1269,4.132,1270,4.132,1271,4.132,1272,4.132,1273,4.132,1274,4.132,1275,4.132]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"modules/DatabaseModule.html":{},"classes/FindAllUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/UtilityModule.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"interfaces/VertupayBalanceResponse.html":{},"controllers/VertupayController.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{},"modules/VertupayModule.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1022,"title":{},"body":{"injectables/VertupayService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1253,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["0.3.22",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1065,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["02a9ba0ea9",{"_index":817,"title":{},"body":{"injectables/VertupayAccountFactory.html":{}}}],["1",{"_index":701,"title":{},"body":{"injectables/UsersService.html":{},"injectables/VertupayApiClient.html":{}}}],["1.0.0",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":905,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["1000",{"_index":661,"title":{},"body":{"controllers/UsersController.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["10000",{"_index":1108,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["11",{"_index":1250,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["11.0.2",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1249,"title":{},"body":{"overview.html":{}}}],["2",{"_index":705,"title":{},"body":{"injectables/UsersService.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["20000",{"_index":1109,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["24",{"_index":935,"title":{},"body":{"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["3",{"_index":1248,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["320a86af63",{"_index":819,"title":{},"body":{"injectables/VertupayAccountFactory.html":{}}}],["3306",{"_index":268,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["4.0.0",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["4.3.4",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["45",{"_index":1041,"title":{},"body":{"injectables/VertupayService.html":{}}}],["4d9c07532e",{"_index":815,"title":{},"body":{"injectables/VertupayAccountFactory.html":{}}}],["5.52.1",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":875,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["6",{"_index":1251,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["6.4.2",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":662,"title":{},"body":{"controllers/UsersController.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["60m",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{}}}],["6379",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["7.8.1",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1247,"title":{},"body":{"overview.html":{}}}],["access_token",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":821,"title":{},"body":{"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"injectables/VertupayService.html":{}}}],["account.merchantid",{"_index":865,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["account_name",{"_index":734,"title":{},"body":{"entities/Vertupay.html":{}}}],["accountconfigs",{"_index":814,"title":{},"body":{"injectables/VertupayAccountFactory.html":{}}}],["accountname",{"_index":11,"title":{},"body":{"classes/ApiListRow.html":{}}}],["accounts",{"_index":813,"title":{},"body":{"injectables/VertupayAccountFactory.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["accounts.push(account",{"_index":823,"title":{},"body":{"injectables/VertupayAccountFactory.html":{}}}],["accounts[0",{"_index":938,"title":{},"body":{"controllers/VertupayController.html":{}}}],["action",{"_index":729,"title":{},"body":{"injectables/UsersService.html":{}}}],["add",{"_index":309,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/TransactionsService.html":{}}}],["addtoqueuefromvertupay",{"_index":516,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["addtoqueuefromvertupay(vertupay",{"_index":526,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["adjust",{"_index":306,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["admin",{"_index":1111,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["age",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindAllUserDto.html":{},"entities/User.html":{}}}],["allowing",{"_index":1180,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":1227,"title":{},"body":{"index.html":{}}}],["amount",{"_index":12,"title":{},"body":{"classes/ApiListRow.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"entities/Transactions.html":{},"entities/Vertupay.html":{},"interfaces/VertupayListResponse.html":{}}}],["apilistrow",{"_index":1,"title":{"classes/ApiListRow.html":{}},"body":{"classes/ApiListRow.html":{},"entities/Vertupay.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{},"coverage.html":{}}}],["apilistrow.accountname",{"_index":769,"title":{},"body":{"entities/Vertupay.html":{}}}],["apilistrow.amount",{"_index":761,"title":{},"body":{"entities/Vertupay.html":{}}}],["apilistrow.createfromapiresponse(data",{"_index":887,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["apilistrow.currency",{"_index":759,"title":{},"body":{"entities/Vertupay.html":{}}}],["apilistrow.daterequest",{"_index":763,"title":{},"body":{"entities/Vertupay.html":{}}}],["apilistrow.merchantid",{"_index":755,"title":{},"body":{"entities/Vertupay.html":{}}}],["apilistrow.merchanttransactionid",{"_index":753,"title":{},"body":{"entities/Vertupay.html":{}}}],["apilistrow.paymenttype",{"_index":767,"title":{},"body":{"entities/Vertupay.html":{}}}],["apilistrow.transactionid",{"_index":757,"title":{},"body":{"entities/Vertupay.html":{}}}],["apilistrow.transactionstatus",{"_index":765,"title":{},"body":{"entities/Vertupay.html":{}}}],["apirows",{"_index":890,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["app",{"_index":722,"title":{},"body":{"injectables/UsersService.html":{}}}],["app.controller",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":66,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1152,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":864,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["applications",{"_index":1128,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":116,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":90,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":593,"title":{},"body":{"entities/User.html":{}}}],["arrays",{"_index":1008,"title":{},"body":{"injectables/VertupayService.html":{}}}],["async",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":685,"title":{},"body":{"modules/UsersModule.html":{}}}],["auth.guard",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":293,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["auth/local",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["authguard",{"_index":296,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":295,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":339,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":127,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1234,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":96,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1245,"title":{},"body":{"modules.html":{}}}],["await",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":1169,"title":{},"body":{"index.html":{}}}],["axios",{"_index":855,"title":{},"body":{"injectables/VertupayApiClient.html":{},"dependencies.html":{}}}],["axioserror",{"_index":854,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["axioserror.status",{"_index":874,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["backers",{"_index":1228,"title":{},"body":{"index.html":{}}}],["balance",{"_index":926,"title":{},"body":{"controllers/VertupayController.html":{}}}],["balance.all",{"_index":930,"title":{},"body":{"controllers/VertupayController.html":{}}}],["balance.dto",{"_index":857,"title":{},"body":{"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["balance.dto.ts",{"_index":776,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{},"coverage.html":{}}}],["balance.dto.ts:13",{"_index":784,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["balance.dto.ts:21",{"_index":788,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["balance.dto.ts:3",{"_index":781,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["balance.dto.ts:5",{"_index":782,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["balance.dto.ts:6",{"_index":783,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["balance.dto.ts:9",{"_index":789,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["balancefundin",{"_index":915,"title":{},"body":{"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{}}}],["balancefundout",{"_index":916,"title":{},"body":{"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{}}}],["bankaccountname",{"_index":334,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayListResponse.html":{}}}],["bankaccountno",{"_index":333,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayListResponse.html":{}}}],["bankbranch",{"_index":335,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayListResponse.html":{}}}],["bankcity",{"_index":336,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayListResponse.html":{}}}],["bankcode",{"_index":331,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayListResponse.html":{}}}],["bankname",{"_index":332,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayListResponse.html":{}}}],["bankprovince",{"_index":337,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayListResponse.html":{}}}],["based",{"_index":307,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["batch",{"_index":1020,"title":{},"body":{"injectables/VertupayService.html":{}}}],["below",{"_index":884,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["board",{"_index":1220,"title":{},"body":{"index.html":{}}}],["body",{"_index":627,"title":{},"body":{"controllers/UsersController.html":{},"injectables/VertupayApiClient.html":{}}}],["body.data",{"_index":885,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["body.data.map",{"_index":891,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["body.totalrows",{"_index":895,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["boolean",{"_index":586,"title":{},"body":{"entities/User.html":{},"injectables/VertupayApiClient.html":{}}}],["bootstrap",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VertupayModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":509,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["browse",{"_index":1244,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1242,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1123,"title":{},"body":{"index.html":{}}}],["bullmodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionsModule.html":{}}}],["bullmodule.forroot",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmodule.registerqueue",{"_index":485,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["bullmq",{"_index":496,"title":{},"body":{"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"dependencies.html":{}}}],["cache",{"_index":643,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":641,"title":{},"body":{"controllers/UsersController.html":{}}}],["cachekey('custom_key",{"_index":663,"title":{},"body":{"controllers/UsersController.html":{}}}],["cachemanager",{"_index":647,"title":{},"body":{"controllers/UsersController.html":{}}}],["cachemodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.registerasync(redisoptions",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemoduleasyncoptions",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cachettl",{"_index":642,"title":{},"body":{"controllers/UsersController.html":{}}}],["cachettl(1000",{"_index":665,"title":{},"body":{"controllers/UsersController.html":{}}}],["case",{"_index":504,"title":{},"body":{"classes/TransactionsProcessor.html":{},"injectables/VertupayService.html":{}}}],["catch",{"_index":417,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{}}}],["channel",{"_index":1195,"title":{},"body":{"index.html":{}}}],["check",{"_index":1159,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/ApiListRow.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"classes/FindAllUserDto.html":{},"classes/TransactionsProcessor.html":{},"classes/UpdateUserDto.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"classes/VertupayApiError.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{}},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"modules/DatabaseModule.html":{},"classes/FindAllUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/UtilityModule.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"controllers/VertupayController.html":{},"modules/VertupayModule.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiListRow.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"classes/FindAllUserDto.html":{},"classes/TransactionsProcessor.html":{},"classes/UpdateUserDto.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"classes/VertupayApiError.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"overview.html":{}}}],["clicks",{"_index":1179,"title":{},"body":{"index.html":{}}}],["client",{"_index":950,"title":{},"body":{"modules/VertupayModule.html":{},"injectables/VertupayService.html":{}}}],["client.ts",{"_index":826,"title":{},"body":{"injectables/VertupayApiClient.html":{},"coverage.html":{}}}],["client.ts:120",{"_index":840,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["client.ts:127",{"_index":843,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["client.ts:16",{"_index":832,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["client.ts:19",{"_index":834,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["client.ts:60",{"_index":838,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["cloud",{"_index":1164,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule",{"_index":477,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule_providers",{"_index":478,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":674,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":675,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":676,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_vertupaymodule",{"_index":943,"title":{},"body":{"modules/VertupayModule.html":{},"overview.html":{}}}],["cluster_vertupaymodule_providers",{"_index":944,"title":{},"body":{"modules/VertupayModule.html":{},"overview.html":{}}}],["code",{"_index":652,"title":{},"body":{"controllers/UsersController.html":{},"controllers/VertupayController.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":461,"title":{},"body":{"entities/Transactions.html":{},"entities/User.html":{},"entities/Vertupay.html":{}}}],["column({default",{"_index":587,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":454,"title":{},"body":{"entities/Transactions.html":{},"entities/User.html":{}}}],["come",{"_index":1186,"title":{},"body":{"index.html":{}}}],["completed",{"_index":1104,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["complex",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules/VertupayModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":600,"title":{},"body":{"injectables/UsersConfig.html":{},"injectables/VertupayAccountFactory.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('database_password",{"_index":605,"title":{},"body":{"injectables/UsersConfig.html":{}}}],["configservice.get('database_user",{"_index":604,"title":{},"body":{"injectables/UsersConfig.html":{}}}],["configservice.get('redis_host",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configure",{"_index":379,"title":{},"body":{"modules/MiddlewaresModule.html":{}}}],["configure(consumer",{"_index":380,"title":{},"body":{"modules/MiddlewaresModule.html":{}}}],["connection",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error('error",{"_index":419,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{}}}],["console.log",{"_index":1023,"title":{},"body":{"injectables/VertupayService.html":{}}}],["console.log('here",{"_index":569,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["console.log(`request",{"_index":360,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log(`transaction",{"_index":433,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["console.log(account",{"_index":859,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["console.log(balance",{"_index":928,"title":{},"body":{"controllers/VertupayController.html":{}}}],["console.log(body",{"_index":889,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["console.log(date",{"_index":557,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["console.log(error",{"_index":942,"title":{},"body":{"controllers/VertupayController.html":{}}}],["console.log(response",{"_index":872,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["console.log(signature",{"_index":862,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["console.log(signaturestring",{"_index":897,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["console.log(typeof",{"_index":929,"title":{},"body":{"controllers/VertupayController.html":{}}}],["console.log(updatedtransaction.ping",{"_index":431,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["console.log(updateuserdto",{"_index":728,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.warn",{"_index":424,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["const",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerTimesMiddleware.html":{},"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Vertupay.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/DatabaseCredentials.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{}}}],["constructor(authservice",{"_index":341,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":599,"title":{},"body":{"injectables/UsersConfig.html":{},"injectables/VertupayAccountFactory.html":{}}}],["constructor(fundin",{"_index":780,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["constructor(httpservice",{"_index":830,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["constructor(merchantid",{"_index":800,"title":{},"body":{"classes/VertupayAccountDto.html":{}}}],["constructor(merchanttransactionid",{"_index":24,"title":{},"body":{"classes/ApiListRow.html":{}}}],["constructor(message",{"_index":909,"title":{},"body":{"classes/VertupayApiError.html":{}}}],["constructor(pay",{"_index":957,"title":{},"body":{"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{}}}],["constructor(private",{"_index":346,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/UsersConfig.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{}}}],["constructor(public",{"_index":960,"title":{},"body":{"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{}}}],["constructor(transactionsrepository",{"_index":520,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["constructor(transactionsservice",{"_index":393,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["constructor(user",{"_index":251,"title":{},"body":{"classes/DatabaseCredentials.html":{}}}],["constructor(usersconfig",{"_index":688,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(vertupayaccountfactory",{"_index":968,"title":{},"body":{"injectables/VertupayService.html":{}}}],["consumer",{"_index":383,"title":{},"body":{"modules/MiddlewaresModule.html":{}}}],["consumer.apply(loggermiddleware).forroutes('users",{"_index":387,"title":{},"body":{"modules/MiddlewaresModule.html":{}}}],["consumer.apply(loggertimesmiddleware).forroutes",{"_index":388,"title":{},"body":{"modules/MiddlewaresModule.html":{}}}],["content",{"_index":328,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/VertupayApiClient.html":{},"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{}}}],["controller",{"_index":65,"title":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"controllers/VertupayController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"controllers/VertupayController.html":{},"coverage.html":{}}}],["controller('users",{"_index":644,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('vertupay",{"_index":924,"title":{},"body":{"controllers/VertupayController.html":{}}}],["controllers",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"controllers/VertupayController.html":{},"modules/VertupayModule.html":{},"overview.html":{}}}],["convert",{"_index":902,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["convertfromvertupaytotransaction",{"_index":517,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["convertfromvertupaytotransaction(transactions",{"_index":528,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["courses",{"_index":1201,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1045,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":444,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VertupayService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":648,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":612,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(transaction",{"_index":530,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["createaccounts",{"_index":809,"title":{},"body":{"injectables/VertupayAccountFactory.html":{}}}],["created",{"_index":440,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"controllers/UsersController.html":{}}}],["created.event",{"_index":411,"title":{},"body":{"injectables/PayVertupayListener.html":{},"injectables/VertupayService.html":{}}}],["created.event.ts",{"_index":955,"title":{},"body":{"classes/VertupayPayCreatedEvent.html":{},"coverage.html":{}}}],["created.event.ts:3",{"_index":958,"title":{},"body":{"classes/VertupayPayCreatedEvent.html":{}}}],["created.event.ts:4",{"_index":959,"title":{},"body":{"classes/VertupayPayCreatedEvent.html":{}}}],["created_at",{"_index":447,"title":{},"body":{"entities/Transactions.html":{},"entities/User.html":{}}}],["createfromapiresponse",{"_index":22,"title":{},"body":{"classes/ApiListRow.html":{},"classes/VertupayAccountBalanceDto.html":{}}}],["createfromapiresponse(data",{"_index":43,"title":{},"body":{"classes/ApiListRow.html":{}}}],["createfromapiresponse(vertupaybalanceresponse",{"_index":786,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["createhash",{"_index":845,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["createhash('sha512",{"_index":899,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["creates",{"_index":717,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":227,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.age",{"_index":711,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.firstname",{"_index":707,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.lastname",{"_index":709,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.roles",{"_index":713,"title":{},"body":{"injectables/UsersService.html":{}}}],["creating",{"_index":544,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["creation",{"_index":546,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["cron",{"_index":982,"title":{},"body":{"injectables/VertupayService.html":{}}}],["cron(cronexpression.every_10_minutes",{"_index":1037,"title":{},"body":{"injectables/VertupayService.html":{}}}],["cronexpression",{"_index":983,"title":{},"body":{"injectables/VertupayService.html":{}}}],["crypto",{"_index":846,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["currency",{"_index":13,"title":{},"body":{"classes/ApiListRow.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"entities/Transactions.html":{},"entities/Vertupay.html":{},"interfaces/VertupayListResponse.html":{}}}],["current",{"_index":1039,"title":{},"body":{"injectables/VertupayService.html":{}}}],["current_timestamp",{"_index":459,"title":{},"body":{"entities/Transactions.html":{},"entities/User.html":{}}}],["customerror",{"_index":931,"title":{},"body":{"controllers/VertupayController.html":{}}}],["customerror.message",{"_index":932,"title":{},"body":{"controllers/VertupayController.html":{}}}],["data",{"_index":46,"title":{},"body":{"classes/ApiListRow.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"controllers/UsersController.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"interfaces/VertupayListResponse.html":{}}}],["data.amount",{"_index":59,"title":{},"body":{"classes/ApiListRow.html":{}}}],["data.bankaccountname",{"_index":62,"title":{},"body":{"classes/ApiListRow.html":{}}}],["data.currency",{"_index":58,"title":{},"body":{"classes/ApiListRow.html":{}}}],["data.daterequest",{"_index":60,"title":{},"body":{"classes/ApiListRow.html":{}}}],["data.merchantid",{"_index":56,"title":{},"body":{"classes/ApiListRow.html":{}}}],["data.merchanttransactionid",{"_index":55,"title":{},"body":{"classes/ApiListRow.html":{}}}],["data.transactionid",{"_index":57,"title":{},"body":{"classes/ApiListRow.html":{}}}],["data.transactionstatus",{"_index":61,"title":{},"body":{"classes/ApiListRow.html":{}}}],["database",{"_index":271,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/UsersService.html":{},"injectables/VertupayService.html":{}}}],["database.credentials.class",{"_index":602,"title":{},"body":{"injectables/UsersConfig.html":{}}}],["database/database.module",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["database_password",{"_index":249,"title":{},"body":{"classes/DatabaseCredentials.html":{}}}],["database_user",{"_index":250,"title":{},"body":{"classes/DatabaseCredentials.html":{}}}],["databasecredentials",{"_index":247,"title":{"classes/DatabaseCredentials.html":{}},"body":{"classes/DatabaseCredentials.html":{},"injectables/UsersConfig.html":{},"coverage.html":{}}}],["databasemodule",{"_index":128,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":457,"title":{},"body":{"entities/Transactions.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["date(end.gettime",{"_index":934,"title":{},"body":{"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["date(formatteddatestring",{"_index":556,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["date.now",{"_index":371,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{}}}],["date_request",{"_index":735,"title":{},"body":{"entities/Vertupay.html":{}}}],["dateend",{"_index":878,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["daterequest",{"_index":14,"title":{},"body":{"classes/ApiListRow.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayListResponse.html":{}}}],["datestart",{"_index":876,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["db",{"_index":598,"title":{},"body":{"injectables/UsersConfig.html":{},"controllers/VertupayController.html":{}}}],["dbrow",{"_index":413,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/VertupayService.html":{}}}],["dbrow.updatefromapilistrow(item",{"_index":1015,"title":{},"body":{"injectables/VertupayService.html":{}}}],["dbrows",{"_index":998,"title":{},"body":{"injectables/VertupayService.html":{}}}],["dbrows.map((row",{"_index":1004,"title":{},"body":{"injectables/VertupayService.html":{}}}],["declarations",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VertupayModule.html":{},"overview.html":{}}}],["decorators",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/FindAllUserDto.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"entities/Vertupay.html":{},"controllers/VertupayController.html":{}}}],["deeper",{"_index":1197,"title":{},"body":{"index.html":{}}}],["default",{"_index":367,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{},"entities/Transactions.html":{},"classes/TransactionsProcessor.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"injectables/VertupayApiClient.html":{},"injectables/VertupayService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"classes/FindAllUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"controllers/VertupayController.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{}}}],["delete",{"_index":630,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":622,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":118,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VertupayModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1150,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1168,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1160,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1178,"title":{},"body":{"index.html":{}}}],["deposit",{"_index":1105,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["description",{"_index":1129,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":1137,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1208,"title":{},"body":{"index.html":{}}}],["discord",{"_index":1194,"title":{},"body":{"index.html":{}}}],["dive",{"_index":1196,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1046,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["double",{"_index":455,"title":{},"body":{"entities/Transactions.html":{}}}],["dto/create",{"_index":636,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/find",{"_index":640,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/update",{"_index":637,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dummy",{"_index":510,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["duration",{"_index":373,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{}}}],["duration}ms",{"_index":377,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{}}}],["e2e",{"_index":1145,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1124,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1157,"title":{},"body":{"index.html":{}}}],["eg",{"_index":684,"title":{},"body":{"modules/UsersModule.html":{}}}],["emitter",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"injectables/PayVertupayListener.html":{},"injectables/VertupayService.html":{},"dependencies.html":{}}}],["end",{"_index":836,"title":{},"body":{"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["end.toisostring",{"_index":879,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["ensure",{"_index":984,"title":{},"body":{"injectables/VertupayService.html":{},"index.html":{}}}],["enterprise",{"_index":1212,"title":{},"body":{"index.html":{}}}],["entities",{"_index":273,"title":{},"body":{"modules/DatabaseModule.html":{},"entities/Transactions.html":{},"entities/User.html":{},"entities/Vertupay.html":{},"overview.html":{}}}],["entities/transactions.entity",{"_index":481,"title":{},"body":{"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{}}}],["entities/user.entity",{"_index":680,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entities/vertupay.entity",{"_index":952,"title":{},"body":{"modules/VertupayModule.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{}}}],["entity",{"_index":445,"title":{"entities/Transactions.html":{},"entities/User.html":{},"entities/Vertupay.html":{}},"body":{"entities/Transactions.html":{},"entities/User.html":{},"entities/Vertupay.html":{},"coverage.html":{}}}],["enum/user.role",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["enumerations",{"_index":1098,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":442,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"controllers/VertupayController.html":{},"miscellaneous/enumerations.html":{}}}],["error('could",{"_index":541,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["error('transaction",{"_index":545,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["errormessage",{"_index":330,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{}}}],["event",{"_index":400,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["event.pay",{"_index":438,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["event.pay.transaction_id",{"_index":441,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["eventemitter",{"_index":970,"title":{},"body":{"injectables/VertupayService.html":{}}}],["eventemitter2",{"_index":971,"title":{},"body":{"injectables/VertupayService.html":{}}}],["eventemittermodule",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["events/vertupay.events",{"_index":980,"title":{},"body":{"injectables/VertupayService.html":{}}}],["events/vertupay.pay",{"_index":981,"title":{},"body":{"injectables/VertupayService.html":{}}}],["example",{"_index":719,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["existing",{"_index":996,"title":{},"body":{"injectables/VertupayService.html":{}}}],["existingrowsmap",{"_index":1003,"title":{},"body":{"injectables/VertupayService.html":{}}}],["existingrowsmap.get(item.transactionid",{"_index":1014,"title":{},"body":{"injectables/VertupayService.html":{}}}],["existingrowsmap.has(item.transactionid",{"_index":1013,"title":{},"body":{"injectables/VertupayService.html":{}}}],["experience",{"_index":1199,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":52,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"modules/DatabaseModule.html":{},"classes/FindAllUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/UtilityModule.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"interfaces/VertupayBalanceResponse.html":{},"controllers/VertupayController.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{},"modules/VertupayModule.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{}}}],["exports",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VertupayModule.html":{},"overview.html":{}}}],["express",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"dependencies.html":{}}}],["expressrequest",{"_index":76,"title":{},"body":{"controllers/AppController.html":{}}}],["extends",{"_index":294,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/TransactionsProcessor.html":{},"classes/UpdateUserDto.html":{},"classes/VertupayApiError.html":{}}}],["extract",{"_index":989,"title":{},"body":{"injectables/VertupayService.html":{}}}],["extractjwt",{"_index":302,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":314,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["factory",{"_index":947,"title":{},"body":{"modules/VertupayModule.html":{},"injectables/VertupayService.html":{}}}],["factory.ts",{"_index":808,"title":{},"body":{"injectables/VertupayAccountFactory.html":{},"coverage.html":{}}}],["factory.ts:6",{"_index":810,"title":{},"body":{"injectables/VertupayAccountFactory.html":{}}}],["factory.ts:9",{"_index":811,"title":{},"body":{"injectables/VertupayAccountFactory.html":{}}}],["failed",{"_index":547,"title":{},"body":{"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":278,"title":{},"body":{"modules/DatabaseModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"controllers/VertupayController.html":{}}}],["fast",{"_index":1172,"title":{},"body":{"index.html":{}}}],["features",{"_index":1182,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":995,"title":{},"body":{"injectables/VertupayService.html":{}}}],["few",{"_index":1174,"title":{},"body":{"index.html":{}}}],["fields",{"_index":1016,"title":{},"body":{"injectables/VertupayService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"modules/DatabaseModule.html":{},"classes/FindAllUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/UtilityModule.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"interfaces/VertupayBalanceResponse.html":{},"controllers/VertupayController.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{},"modules/VertupayModule.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{},"coverage.html":{}}}],["find",{"_index":542,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["findall",{"_index":609,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@query",{"_index":654,"title":{},"body":{"controllers/UsersController.html":{}}}],["findall(findalluserdto",{"_index":616,"title":{},"body":{"controllers/UsersController.html":{}}}],["findalluserdto",{"_index":282,"title":{"classes/FindAllUserDto.html":{}},"body":{"classes/FindAllUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["findbyname",{"_index":687,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyname(name",{"_index":693,"title":{},"body":{"injectables/UsersService.html":{}}}],["finderror",{"_index":418,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["finding",{"_index":420,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{}}}],["findone",{"_index":610,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone\",\"context\":\"usersservice",{"_index":724,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":666,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":618,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebypaymentid",{"_index":518,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["findonebypaymentid(id",{"_index":532,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["firstname",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["firstvaluefrom",{"_index":848,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["focus",{"_index":1181,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1215,"title":{},"body":{"index.html":{}}}],["formatteddatestring",{"_index":554,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["found",{"_index":425,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"controllers/UsersController.html":{},"controllers/VertupayController.html":{}}}],["framework",{"_index":1122,"title":{},"body":{"index.html":{}}}],["fromapilistrow(apilistrow",{"_index":770,"title":{},"body":{"entities/Vertupay.html":{}}}],["fromvertupay",{"_index":505,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["full",{"_index":1211,"title":{},"body":{"index.html":{}}}],["function",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1116,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundin",{"_index":777,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["fundout",{"_index":778,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["g",{"_index":1176,"title":{},"body":{"index.html":{}}}],["get('/payout",{"_index":920,"title":{},"body":{"controllers/VertupayController.html":{}}}],["get(':id",{"_index":664,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id')@cachettl(undefined",{"_index":619,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('profile",{"_index":112,"title":{},"body":{"controllers/AppController.html":{}}}],["getaccounts",{"_index":965,"title":{},"body":{"injectables/VertupayService.html":{}}}],["getbalance",{"_index":779,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["getbalance(account",{"_index":833,"title":{},"body":{"injectables/VertupayApiClient.html":{},"injectables/VertupayService.html":{}}}],["gethello",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getpayoutlist",{"_index":827,"title":{},"body":{"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["getpayoutlist(account",{"_index":835,"title":{},"body":{"injectables/VertupayApiClient.html":{},"injectables/VertupayService.html":{}}}],["getprofile",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":113,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["getsignaturestring",{"_index":799,"title":{},"body":{"classes/VertupayAccountDto.html":{}}}],["getting",{"_index":1118,"title":{"index.html":{}},"body":{}}],["graph",{"_index":1204,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":1224,"title":{},"body":{"index.html":{}}}],["handlecron",{"_index":966,"title":{},"body":{"injectables/VertupayService.html":{}}}],["handlevertupaycreatedevent",{"_index":391,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["handlevertupaycreatedevent(event",{"_index":396,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["handlevertupayupdatedevent",{"_index":392,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["handlevertupayupdatedevent(event",{"_index":401,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["handling",{"_index":443,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["hands",{"_index":1198,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1187,"title":{},"body":{"index.html":{}}}],["hash",{"_index":898,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["hash.digest('hex').touppercase",{"_index":901,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["hash.update(signaturestring",{"_index":900,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["hashsignature",{"_index":828,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["hashsignature(signaturestring",{"_index":839,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["hasnextpage",{"_index":829,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["hasnextpage(pageno",{"_index":842,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["headers",{"_index":863,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["hello",{"_index":177,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":1202,"title":{},"body":{"index.html":{}}}],["here",{"_index":1232,"title":{},"body":{"index.html":{}}}],["host",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["httpexception",{"_index":632,"title":{},"body":{"controllers/UsersController.html":{},"controllers/VertupayController.html":{}}}],["httpmodule",{"_index":951,"title":{},"body":{"modules/VertupayModule.html":{}}}],["https://api.dylamicapi.com/fund_in/balance.api",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://api.dylamicapi.com/fund_in/transaction_detail.api",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://api.dylamicapi.com/fund_out/transaction_detail.api",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":1238,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":831,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["httpstatus",{"_index":633,"title":{},"body":{"controllers/UsersController.html":{},"controllers/VertupayController.html":{}}}],["httpstatus.internal_server_error",{"_index":933,"title":{},"body":{"controllers/VertupayController.html":{}}}],["httpstatus.not_found",{"_index":669,"title":{},"body":{"controllers/UsersController.html":{}}}],["id",{"_index":423,"title":{},"body":{"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Vertupay.html":{},"injectables/VertupayAccountFactory.html":{}}}],["identifier",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":990,"title":{},"body":{"injectables/VertupayService.html":{}}}],["ignoreexpiration",{"_index":315,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["implements",{"_index":359,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{}}}],["import",{"_index":48,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/FindAllUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/UtilityModule.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"modules/VertupayModule.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{}}}],["imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VertupayModule.html":{},"miscellaneous/variables.html":{}}}],["in(transactionids",{"_index":1000,"title":{},"body":{"injectables/VertupayService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"classes/FindAllUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"interfaces/VertupayBalanceResponse.html":{},"controllers/VertupayController.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"modules/DatabaseModule.html":{},"classes/FindAllUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/UtilityModule.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"interfaces/VertupayBalanceResponse.html":{},"controllers/VertupayController.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{},"modules/VertupayModule.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{}}}],["information",{"_index":1162,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":1184,"title":{},"body":{"index.html":{}}}],["inject",{"_index":634,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["inject(cache_manager",{"_index":646,"title":{},"body":{"controllers/UsersController.html":{}}}],["injectable",{"_index":173,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"injectables/PayVertupayListener.html":{},"injectables/TransactionsService.html":{},"injectables/UsersConfig.html":{},"injectables/UsersService.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"injectables/VertupayService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"injectables/PayVertupayListener.html":{},"injectables/TransactionsService.html":{},"injectables/UsersConfig.html":{},"injectables/UsersService.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"injectables/VertupayService.html":{},"coverage.html":{}}}],["injectables",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"injectables/PayVertupayListener.html":{},"injectables/TransactionsService.html":{},"injectables/UsersConfig.html":{},"injectables/UsersService.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"injectables/VertupayService.html":{},"overview.html":{}}}],["injectqueue",{"_index":537,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["injectqueue('transaction",{"_index":539,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["injectrepository",{"_index":536,"title":{},"body":{"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"injectables/VertupayService.html":{}}}],["injectrepository(transactions",{"_index":538,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["injectrepository(user",{"_index":699,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(vertupay",{"_index":985,"title":{},"body":{"injectables/VertupayService.html":{}}}],["input",{"_index":991,"title":{},"body":{"injectables/VertupayService.html":{}}}],["insert",{"_index":514,"title":{},"body":{"classes/TransactionsProcessor.html":{},"injectables/VertupayService.html":{}}}],["inserts",{"_index":1009,"title":{},"body":{"injectables/VertupayService.html":{}}}],["inside",{"_index":682,"title":{},"body":{"modules/UsersModule.html":{}}}],["install",{"_index":1175,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1135,"title":{},"body":{"index.html":{}}}],["instance",{"_index":703,"title":{},"body":{"injectables/UsersService.html":{}}}],["instead",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interact",{"_index":1205,"title":{},"body":{"index.html":{}}}],["interface",{"_index":297,"title":{"interfaces/JwtPayload.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":299,"title":{},"body":{"interfaces/JwtPayload.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{},"overview.html":{}}}],["is_active",{"_index":579,"title":{},"body":{"entities/User.html":{}}}],["is_deleted",{"_index":580,"title":{},"body":{"entities/User.html":{}}}],["is_ok",{"_index":581,"title":{},"body":{"entities/User.html":{}}}],["isarray",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isglobal",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty()@isnumber",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty()@isstring",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumber",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindAllUserDto.html":{}}}],["isoptional",{"_index":287,"title":{},"body":{"classes/FindAllUserDto.html":{}}}],["isoptional()@transform",{"_index":284,"title":{},"body":{"classes/FindAllUserDto.html":{}}}],["isstring",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["item",{"_index":1012,"title":{},"body":{"injectables/VertupayService.html":{}}}],["job",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"classes/TransactionsProcessor.html":{},"index.html":{}}}],["job.data",{"_index":507,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["job.name",{"_index":503,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["jobs",{"_index":1219,"title":{},"body":{"index.html":{}}}],["join",{"_index":1230,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":305,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":100,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":313,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":298,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":183,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1235,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":1153,"title":{},"body":{"index.html":{}}}],["keyv/redis",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["lastname",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["learn",{"_index":1190,"title":{},"body":{"index.html":{}}}],["legend",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VertupayModule.html":{},"overview.html":{}}}],["level\":\"log\",\"pid\":301,\"timestamp\":1744794310853,\"message\":\"this",{"_index":723,"title":{},"body":{"injectables/UsersService.html":{}}}],["level\":\"log\",\"pid\":301,\"timestamp\":1744794310853,\"message\":{\"id\":4433},\"context\":\"usersservice",{"_index":725,"title":{},"body":{"injectables/UsersService.html":{}}}],["license",{"_index":1241,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1222,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":1217,"title":{},"body":{"index.html":{}}}],["list",{"_index":837,"title":{},"body":{"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["list.map((row",{"_index":993,"title":{},"body":{"injectables/VertupayService.html":{}}}],["list.push",{"_index":886,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["list.push(...apirows",{"_index":893,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["listcontent",{"_index":322,"title":{"interfaces/ListContent.html":{}},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayListResponse.html":{},"coverage.html":{}}}],["listeners/pay.vertupay.listener",{"_index":480,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["listrow",{"_index":44,"title":{"interfaces/ListRow.html":{}},"body":{"classes/ApiListRow.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/VertupayApiClient.html":{},"interfaces/VertupayListResponse.html":{},"coverage.html":{}}}],["local",{"_index":276,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":93,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":184,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":718,"title":{},"body":{"injectables/UsersService.html":{}}}],["logger",{"_index":365,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{},"classes/TransactionsProcessor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VertupayService.html":{}}}],["logger(loggertimesmiddleware.name",{"_index":368,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{}}}],["logger(transactionsprocessor.name",{"_index":489,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["logger(userscontroller.name",{"_index":645,"title":{},"body":{"controllers/UsersController.html":{}}}],["logger(usersservice.name",{"_index":698,"title":{},"body":{"injectables/UsersService.html":{}}}],["logger(vertupayservice.name",{"_index":979,"title":{},"body":{"injectables/VertupayService.html":{}}}],["logger.middleware",{"_index":385,"title":{},"body":{"modules/MiddlewaresModule.html":{}}}],["logger.times.middleware",{"_index":386,"title":{},"body":{"modules/MiddlewaresModule.html":{}}}],["loggermiddleware",{"_index":349,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"injectables/LoggerMiddleware.html":{},"modules/MiddlewaresModule.html":{},"coverage.html":{}}}],["loggertimesmiddleware",{"_index":363,"title":{"injectables/LoggerTimesMiddleware.html":{}},"body":{"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"coverage.html":{}}}],["logging",{"_index":280,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["login",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":72,"title":{},"body":{"controllers/AppController.html":{}}}],["logout(@request",{"_index":109,"title":{},"body":{"controllers/AppController.html":{}}}],["logout(req",{"_index":83,"title":{},"body":{"controllers/AppController.html":{}}}],["look",{"_index":868,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["looking",{"_index":1163,"title":{},"body":{"index.html":{}}}],["lookup",{"_index":1002,"title":{},"body":{"injectables/VertupayService.html":{}}}],["loop",{"_index":1214,"title":{},"body":{"index.html":{}}}],["makes",{"_index":1170,"title":{},"body":{"index.html":{}}}],["manager",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["managing",{"_index":1183,"title":{},"body":{"index.html":{}}}],["map",{"_index":882,"title":{},"body":{"injectables/VertupayApiClient.html":{},"injectables/VertupayService.html":{}}}],["match",{"_index":513,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["matching",{"_index":64,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"modules/DatabaseModule.html":{},"classes/FindAllUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/UtilityModule.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"interfaces/VertupayBalanceResponse.html":{},"controllers/VertupayController.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{},"modules/VertupayModule.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalrows",{"_index":907,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["mau",{"_index":1166,"title":{},"body":{"index.html":{}}}],["member",{"_index":1112,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merchant_id",{"_index":736,"title":{},"body":{"entities/Vertupay.html":{}}}],["merchant_transaction_id",{"_index":737,"title":{},"body":{"entities/Vertupay.html":{}}}],["merchantid",{"_index":15,"title":{},"body":{"classes/ApiListRow.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayApiClient.html":{},"interfaces/VertupayListResponse.html":{}}}],["merchanttransactionid",{"_index":16,"title":{},"body":{"classes/ApiListRow.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayListResponse.html":{}}}],["message",{"_index":650,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VertupayApiError.html":{},"controllers/VertupayController.html":{}}}],["metadata",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":700,"title":{},"body":{"injectables/UsersService.html":{}}}],["methods",{"_index":20,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["middlewareconsumer",{"_index":381,"title":{},"body":{"modules/MiddlewaresModule.html":{}}}],["middlewares/middlewares.module",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewaresmodule",{"_index":129,"title":{"modules/MiddlewaresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MiddlewaresModule.html":{},"modules.html":{},"overview.html":{}}}],["miscellaneous",{"_index":1097,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":658,"title":{},"body":{"controllers/UsersController.html":{}}}],["mit",{"_index":1221,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1139,"title":{},"body":{"index.html":{}}}],["module",{"_index":115,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/MiddlewaresModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/UtilityModule.html":{},"modules/VertupayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/MiddlewaresModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/UtilityModule.html":{},"modules/VertupayModule.html":{},"overview.html":{}}}],["modules",{"_index":117,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/MiddlewaresModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/UtilityModule.html":{},"modules/VertupayModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1161,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":266,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mysql2",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":1236,"title":{},"body":{"index.html":{}}}],["name",{"_index":31,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/DatabaseCredentials.html":{},"classes/FindAllUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{}}}],["need",{"_index":1209,"title":{},"body":{"index.html":{}}}],["needed",{"_index":310,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["nest",{"_index":721,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["nestframework",{"_index":1240,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1151,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":847,"title":{},"body":{"injectables/VertupayApiClient.html":{},"modules/VertupayModule.html":{},"dependencies.html":{}}}],["nestjs/bullmq",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/UtilityModule.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"modules/VertupayModule.html":{},"injectables/VertupayService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersConfig.html":{},"modules/UsersModule.html":{},"injectables/VertupayAccountFactory.html":{},"modules/VertupayModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"injectables/PayVertupayListener.html":{},"injectables/VertupayService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":575,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mau",{"_index":1177,"title":{},"body":{"index.html":{}}}],["nestjs/passport",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"injectables/VertupayService.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":258,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/VertupayModule.html":{},"injectables/VertupayService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":358,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{}}}],["nestmodule",{"_index":384,"title":{},"body":{"modules/MiddlewaresModule.html":{}}}],["new",{"_index":54,"title":{},"body":{"classes/ApiListRow.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerTimesMiddleware.html":{},"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{},"coverage.html":{}}}],["newtransaction",{"_index":437,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["next",{"_index":354,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{}}}],["nextfunction",{"_index":355,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{}}}],["node.js",{"_index":1121,"title":{},"body":{"index.html":{}}}],["node:process",{"_index":260,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["npm",{"_index":1134,"title":{},"body":{"index.html":{}}}],["null",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{}}}],["number",{"_index":26,"title":{},"body":{"classes/ApiListRow.html":{},"classes/CreateUserDto.html":{},"classes/FindAllUserDto.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"entities/Transactions.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"injectables/VertupayApiClient.html":{},"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{}}}],["number(value",{"_index":291,"title":{},"body":{"classes/FindAllUserDto.html":{}}}],["object",{"_index":870,"title":{},"body":{"injectables/VertupayApiClient.html":{},"miscellaneous/variables.html":{}}}],["offer",{"_index":1218,"title":{},"body":{"index.html":{}}}],["official",{"_index":1167,"title":{},"body":{"index.html":{}}}],["one",{"_index":1035,"title":{},"body":{"injectables/VertupayService.html":{}}}],["onevent",{"_index":405,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["onevent(vertupaylistevents.create",{"_index":398,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["onevent(vertupaylistevents.update",{"_index":403,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["onupdate",{"_index":471,"title":{},"body":{"entities/Transactions.html":{},"entities/User.html":{}}}],["open",{"_index":1223,"title":{},"body":{"index.html":{}}}],["optional",{"_index":33,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/DatabaseCredentials.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{}}}],["order_no",{"_index":448,"title":{},"body":{"entities/Transactions.html":{}}}],["out",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"classes/VertupayAccountBalanceDto.html":{},"modules/VertupayModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":720,"title":{},"body":{"injectables/UsersService.html":{}}}],["outside",{"_index":683,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":1246,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1068,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":325,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/VertupayApiClient.html":{},"interfaces/VertupayListResponse.html":{}}}],["pageno",{"_index":844,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["param",{"_index":629,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/DatabaseCredentials.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{}}}],["parseint(configservice.get('redis_port",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["part",{"_index":1210,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":574,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":573,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pass",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["passkey",{"_index":798,"title":{},"body":{"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{}}}],["passport",{"_index":304,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":301,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":311,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"classes/DatabaseCredentials.html":{},"modules/DatabaseModule.html":{}}}],["patch",{"_index":628,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":625,"title":{},"body":{"controllers/UsersController.html":{}}}],["pay",{"_index":956,"title":{},"body":{"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{}}}],["payin_balance",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payin_list",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.user",{"_index":318,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["payment",{"_index":422,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{}}}],["payment.type",{"_index":474,"title":{},"body":{"entities/Transactions.html":{},"injectables/TransactionsService.html":{}}}],["payment_id",{"_index":449,"title":{},"body":{"entities/Transactions.html":{},"injectables/TransactionsService.html":{}}}],["payment_type",{"_index":450,"title":{},"body":{"entities/Transactions.html":{},"entities/Vertupay.html":{}}}],["paymentstatus",{"_index":468,"title":{},"body":{"entities/Transactions.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["paymentstatus.completed",{"_index":552,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["paymentstatus.failed",{"_index":553,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["paymenttype",{"_index":17,"title":{},"body":{"classes/ApiListRow.html":{},"entities/Transactions.html":{},"entities/Vertupay.html":{},"injectables/VertupayApiClient.html":{},"miscellaneous/enumerations.html":{}}}],["paymenttype.withdraw",{"_index":892,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["payout",{"_index":940,"title":{},"body":{"controllers/VertupayController.html":{}}}],["payout_list",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payoutlist",{"_index":936,"title":{},"body":{"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["payvertupaylistener",{"_index":389,"title":{"injectables/PayVertupayListener.html":{}},"body":{"injectables/PayVertupayListener.html":{},"modules/TransactionsModule.html":{},"coverage.html":{},"overview.html":{}}}],["perform",{"_index":1019,"title":{},"body":{"injectables/VertupayService.html":{}}}],["ping",{"_index":475,"title":{},"body":{"entities/Transactions.html":{},"entities/Vertupay.html":{}}}],["plain",{"_index":869,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["plaintoinstance",{"_index":497,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["plaintoinstance(vertupay",{"_index":506,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["platform",{"_index":1165,"title":{},"body":{"index.html":{}}}],["please",{"_index":1193,"title":{},"body":{"index.html":{}}}],["pong",{"_index":476,"title":{},"body":{"entities/Transactions.html":{},"entities/Vertupay.html":{}}}],["port",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":1158,"title":{},"body":{"index.html":{}}}],["post",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["post('auth/login",{"_index":105,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/logout",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["prefix",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"controllers/VertupayController.html":{}}}],["prepare",{"_index":1007,"title":{},"body":{"injectables/VertupayService.html":{}}}],["primarygeneratedcolumn",{"_index":463,"title":{},"body":{"entities/Transactions.html":{},"entities/User.html":{},"entities/Vertupay.html":{}}}],["private",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LoggerTimesMiddleware.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VertupayService.html":{}}}],["process",{"_index":259,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/TransactionsProcessor.html":{}}}],["process(job",{"_index":490,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["process.env.mysql_database",{"_index":272,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["process.env.mysql_host",{"_index":267,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["process.env.mysql_password",{"_index":270,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["process.env.mysql_user",{"_index":269,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["process.env.node_env",{"_index":275,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["processor",{"_index":494,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["processor('transaction",{"_index":498,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["production",{"_index":279,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["progressive",{"_index":1120,"title":{},"body":{"index.html":{}}}],["project",{"_index":1132,"title":{},"body":{"index.html":{}}}],["promise",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"injectables/VertupayApiClient.html":{},"injectables/VertupayService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/ApiListRow.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"classes/FindAllUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/LoggerTimesMiddleware.html":{},"entities/Transactions.html":{},"classes/TransactionsProcessor.html":{},"entities/User.html":{},"injectables/UsersConfig.html":{},"injectables/UsersService.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{},"properties.html":{}}}],["providers",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VertupayModule.html":{},"overview.html":{}}}],["public",{"_index":9,"title":{},"body":{"classes/ApiListRow.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{}}}],["query",{"_index":631,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":1191,"title":{},"body":{"index.html":{}}}],["queue",{"_index":523,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["quick",{"_index":1001,"title":{},"body":{"injectables/VertupayService.html":{}}}],["read",{"_index":1231,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":10,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"injectables/LoggerTimesMiddleware.html":{},"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{}}}],["ready",{"_index":1149,"title":{},"body":{"index.html":{}}}],["real",{"_index":1206,"title":{},"body":{"index.html":{}}}],["redis",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["redis.options",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["redisoptions",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["redisstore",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":611,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":672,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":621,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":731,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":521,"title":{},"body":{"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"injectables/VertupayService.html":{},"index.html":{}}}],["req",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{}}}],["req.ip",{"_index":362,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.logout",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["req.originalurl",{"_index":375,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{}}}],["req.user",{"_index":114,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{}}}],["requiring",{"_index":1173,"title":{},"body":{"index.html":{}}}],["res",{"_index":353,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{}}}],["res.on('finish",{"_index":372,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{}}}],["reset",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VertupayModule.html":{},"overview.html":{}}}],["resources",{"_index":1185,"title":{},"body":{"index.html":{}}}],["response",{"_index":50,"title":{},"body":{"classes/ApiListRow.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"classes/VertupayAccountBalanceDto.html":{},"injectables/VertupayApiClient.html":{}}}],["response.issuccess",{"_index":871,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["response.ts",{"_index":324,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{},"coverage.html":{}}}],["responsecode",{"_index":638,"title":{},"body":{"controllers/UsersController.html":{},"controllers/VertupayController.html":{},"miscellaneous/enumerations.html":{}}}],["responsecode.error",{"_index":668,"title":{},"body":{"controllers/UsersController.html":{},"controllers/VertupayController.html":{}}}],["responsecode.success",{"_index":653,"title":{},"body":{"controllers/UsersController.html":{},"controllers/VertupayController.html":{}}}],["result",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["resultcode",{"_index":329,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{}}}],["results",{"_index":63,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"modules/DatabaseModule.html":{},"classes/FindAllUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/UtilityModule.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"interfaces/VertupayBalanceResponse.html":{},"controllers/VertupayController.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{},"modules/VertupayModule.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":53,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":47,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["roles",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["row",{"_index":1006,"title":{},"body":{"injectables/VertupayService.html":{}}}],["row.transaction_id",{"_index":1005,"title":{},"body":{"injectables/VertupayService.html":{}}}],["row.transactionid",{"_index":994,"title":{},"body":{"injectables/VertupayService.html":{}}}],["rowperpage",{"_index":904,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["rows",{"_index":997,"title":{},"body":{"injectables/VertupayService.html":{}}}],["run",{"_index":1136,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1156,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":849,"title":{},"body":{"injectables/VertupayApiClient.html":{},"dependencies.html":{}}}],["safe",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save",{"_index":519,"title":{},"body":{"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"injectables/VertupayService.html":{}}}],["save(transaction",{"_index":534,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["saved",{"_index":549,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["saveerror",{"_index":435,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["saving",{"_index":436,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{}}}],["scalable",{"_index":1125,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["second",{"_index":1040,"title":{},"body":{"injectables/VertupayService.html":{}}}],["secret",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":316,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["see",{"_index":883,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["server",{"_index":1126,"title":{},"body":{"index.html":{}}}],["set",{"_index":277,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["setup",{"_index":1133,"title":{},"body":{"index.html":{}}}],["side",{"_index":1127,"title":{},"body":{"index.html":{}}}],["signature",{"_index":860,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["signaturestring",{"_index":841,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["signoptions",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":592,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["socket",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"modules/DatabaseModule.html":{},"classes/FindAllUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/UtilityModule.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"interfaces/VertupayBalanceResponse.html":{},"controllers/VertupayController.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{},"modules/VertupayModule.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sponsors",{"_index":1226,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../payment.type.ts",{"_index":1099,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../redis.options.ts",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../response.message.code.ts",{"_index":1100,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.role.ts",{"_index":1101,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../vertupay.endpoints.ts",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../vertupay.events.ts",{"_index":1102,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:17",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:23",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:29",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:35",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":175,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":176,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:24",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":1052,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":292,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":300,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:13",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:22",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local",{"_index":338,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":340,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:13",{"_index":344,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:8",{"_index":342,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/database/database.module.ts",{"_index":256,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/main.ts",{"_index":1056,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middlewares/logger.middleware.ts",{"_index":350,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/logger.middleware.ts:6",{"_index":356,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/middlewares/logger.times.middleware.ts",{"_index":364,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/logger.times.middleware.ts:6",{"_index":369,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{}}}],["src/middlewares/logger.times.middleware.ts:7",{"_index":366,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{}}}],["src/middlewares/middlewares.module.ts",{"_index":378,"title":{},"body":{"modules/MiddlewaresModule.html":{}}}],["src/middlewares/middlewares.module.ts:7",{"_index":382,"title":{},"body":{"modules/MiddlewaresModule.html":{}}}],["src/redis.options.ts",{"_index":1058,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/transactions/entities/transactions.entity.ts",{"_index":446,"title":{},"body":{"entities/Transactions.html":{},"coverage.html":{}}}],["src/transactions/entities/transactions.entity.ts:10",{"_index":466,"title":{},"body":{"entities/Transactions.html":{}}}],["src/transactions/entities/transactions.entity.ts:13",{"_index":467,"title":{},"body":{"entities/Transactions.html":{}}}],["src/transactions/entities/transactions.entity.ts:18",{"_index":456,"title":{},"body":{"entities/Transactions.html":{}}}],["src/transactions/entities/transactions.entity.ts:21",{"_index":462,"title":{},"body":{"entities/Transactions.html":{}}}],["src/transactions/entities/transactions.entity.ts:24",{"_index":470,"title":{},"body":{"entities/Transactions.html":{}}}],["src/transactions/entities/transactions.entity.ts:27",{"_index":469,"title":{},"body":{"entities/Transactions.html":{}}}],["src/transactions/entities/transactions.entity.ts:30",{"_index":465,"title":{},"body":{"entities/Transactions.html":{}}}],["src/transactions/entities/transactions.entity.ts:33",{"_index":460,"title":{},"body":{"entities/Transactions.html":{}}}],["src/transactions/entities/transactions.entity.ts:40",{"_index":472,"title":{},"body":{"entities/Transactions.html":{}}}],["src/transactions/entities/transactions.entity.ts:7",{"_index":464,"title":{},"body":{"entities/Transactions.html":{}}}],["src/transactions/listeners/pay.vertupay.listener.ts",{"_index":390,"title":{},"body":{"injectables/PayVertupayListener.html":{},"coverage.html":{}}}],["src/transactions/listeners/pay.vertupay.listener.ts:13",{"_index":404,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["src/transactions/listeners/pay.vertupay.listener.ts:54",{"_index":399,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["src/transactions/listeners/pay.vertupay.listener.ts:9",{"_index":395,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["src/transactions/payment.type.ts",{"_index":1103,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/transactions/transactions.module.ts",{"_index":479,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["src/transactions/transactions.processor.ts",{"_index":486,"title":{},"body":{"classes/TransactionsProcessor.html":{},"coverage.html":{}}}],["src/transactions/transactions.processor.ts:11",{"_index":488,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["src/transactions/transactions.processor.ts:16",{"_index":491,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["src/transactions/transactions.processor.ts:37",{"_index":493,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["src/transactions/transactions.service.ts",{"_index":515,"title":{},"body":{"injectables/TransactionsService.html":{},"coverage.html":{}}}],["src/transactions/transactions.service.ts:11",{"_index":524,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/transactions/transactions.service.ts:19",{"_index":533,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/transactions/transactions.service.ts:28",{"_index":531,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/transactions/transactions.service.ts:37",{"_index":535,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/transactions/transactions.service.ts:46",{"_index":529,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/transactions/transactions.service.ts:70",{"_index":527,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/users/database.credentials.class.ts",{"_index":248,"title":{},"body":{"classes/DatabaseCredentials.html":{},"coverage.html":{}}}],["src/users/database.credentials.class.ts:2",{"_index":253,"title":{},"body":{"classes/DatabaseCredentials.html":{}}}],["src/users/database.credentials.class.ts:3",{"_index":252,"title":{},"body":{"classes/DatabaseCredentials.html":{}}}],["src/users/dto/create",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/find",{"_index":283,"title":{},"body":{"classes/FindAllUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":572,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":578,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:10",{"_index":584,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:13",{"_index":591,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:16",{"_index":594,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:19",{"_index":588,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:22",{"_index":589,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:25",{"_index":590,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:28",{"_index":583,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:35",{"_index":595,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:38",{"_index":582,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:7",{"_index":585,"title":{},"body":{"entities/User.html":{}}}],["src/users/enum/user.role.ts",{"_index":1110,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/users/users.config.ts",{"_index":597,"title":{},"body":{"injectables/UsersConfig.html":{},"coverage.html":{}}}],["src/users/users.config.ts:7",{"_index":601,"title":{},"body":{"injectables/UsersConfig.html":{}}}],["src/users/users.controller.ts",{"_index":607,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:35",{"_index":614,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":617,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:69",{"_index":620,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:92",{"_index":626,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:97",{"_index":623,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":677,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":686,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":690,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":691,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:35",{"_index":692,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:41",{"_index":695,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:50",{"_index":694,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:55",{"_index":697,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:60",{"_index":696,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utility/response.message.code.ts",{"_index":1107,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utility/utility.module.ts",{"_index":732,"title":{},"body":{"modules/UtilityModule.html":{}}}],["src/vertupay/entities/vertupay.entity.ts",{"_index":733,"title":{},"body":{"entities/Vertupay.html":{},"coverage.html":{}}}],["src/vertupay/entities/vertupay.entity.ts:11",{"_index":746,"title":{},"body":{"entities/Vertupay.html":{}}}],["src/vertupay/entities/vertupay.entity.ts:14",{"_index":745,"title":{},"body":{"entities/Vertupay.html":{}}}],["src/vertupay/entities/vertupay.entity.ts:16",{"_index":748,"title":{},"body":{"entities/Vertupay.html":{}}}],["src/vertupay/entities/vertupay.entity.ts:18",{"_index":742,"title":{},"body":{"entities/Vertupay.html":{}}}],["src/vertupay/entities/vertupay.entity.ts:20",{"_index":741,"title":{},"body":{"entities/Vertupay.html":{}}}],["src/vertupay/entities/vertupay.entity.ts:22",{"_index":743,"title":{},"body":{"entities/Vertupay.html":{}}}],["src/vertupay/entities/vertupay.entity.ts:24",{"_index":749,"title":{},"body":{"entities/Vertupay.html":{}}}],["src/vertupay/entities/vertupay.entity.ts:26",{"_index":747,"title":{},"body":{"entities/Vertupay.html":{}}}],["src/vertupay/entities/vertupay.entity.ts:28",{"_index":740,"title":{},"body":{"entities/Vertupay.html":{}}}],["src/vertupay/entities/vertupay.entity.ts:8",{"_index":744,"title":{},"body":{"entities/Vertupay.html":{}}}],["src/vertupay/events/vertupay.events.ts",{"_index":1113,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/vertupay/events/vertupay.pay",{"_index":954,"title":{},"body":{"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"coverage.html":{}}}],["src/vertupay/struct/vertupay.account",{"_index":775,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{},"coverage.html":{}}}],["src/vertupay/struct/vertupay.account.dto.ts",{"_index":797,"title":{},"body":{"classes/VertupayAccountDto.html":{},"coverage.html":{}}}],["src/vertupay/struct/vertupay.account.dto.ts:1",{"_index":801,"title":{},"body":{"classes/VertupayAccountDto.html":{}}}],["src/vertupay/struct/vertupay.account.dto.ts:3",{"_index":802,"title":{},"body":{"classes/VertupayAccountDto.html":{}}}],["src/vertupay/struct/vertupay.account.dto.ts:4",{"_index":803,"title":{},"body":{"classes/VertupayAccountDto.html":{}}}],["src/vertupay/struct/vertupay.account.dto.ts:7",{"_index":804,"title":{},"body":{"classes/VertupayAccountDto.html":{}}}],["src/vertupay/struct/vertupay.balance",{"_index":913,"title":{},"body":{"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"coverage.html":{}}}],["src/vertupay/struct/vertupay.endpoints.ts",{"_index":1062,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/vertupay/struct/vertupay.pay.dto.ts",{"_index":6,"title":{},"body":{"classes/ApiListRow.html":{},"coverage.html":{}}}],["src/vertupay/struct/vertupay.pay.dto.ts:10",{"_index":35,"title":{},"body":{"classes/ApiListRow.html":{}}}],["src/vertupay/struct/vertupay.pay.dto.ts:11",{"_index":37,"title":{},"body":{"classes/ApiListRow.html":{}}}],["src/vertupay/struct/vertupay.pay.dto.ts:12",{"_index":42,"title":{},"body":{"classes/ApiListRow.html":{}}}],["src/vertupay/struct/vertupay.pay.dto.ts:13",{"_index":40,"title":{},"body":{"classes/ApiListRow.html":{}}}],["src/vertupay/struct/vertupay.pay.dto.ts:14",{"_index":34,"title":{},"body":{"classes/ApiListRow.html":{}}}],["src/vertupay/struct/vertupay.pay.dto.ts:17",{"_index":45,"title":{},"body":{"classes/ApiListRow.html":{}}}],["src/vertupay/struct/vertupay.pay.dto.ts:4",{"_index":28,"title":{},"body":{"classes/ApiListRow.html":{}}}],["src/vertupay/struct/vertupay.pay.dto.ts:6",{"_index":39,"title":{},"body":{"classes/ApiListRow.html":{}}}],["src/vertupay/struct/vertupay.pay.dto.ts:7",{"_index":38,"title":{},"body":{"classes/ApiListRow.html":{}}}],["src/vertupay/struct/vertupay.pay.dto.ts:8",{"_index":41,"title":{},"body":{"classes/ApiListRow.html":{}}}],["src/vertupay/struct/vertupay.pay.dto.ts:9",{"_index":36,"title":{},"body":{"classes/ApiListRow.html":{}}}],["src/vertupay/struct/vertypay.list",{"_index":323,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayListResponse.html":{},"coverage.html":{}}}],["src/vertupay/vertupay.account",{"_index":807,"title":{},"body":{"injectables/VertupayAccountFactory.html":{},"coverage.html":{}}}],["src/vertupay/vertupay.api",{"_index":825,"title":{},"body":{"injectables/VertupayApiClient.html":{},"coverage.html":{}}}],["src/vertupay/vertupay.controller.ts",{"_index":918,"title":{},"body":{"controllers/VertupayController.html":{},"coverage.html":{}}}],["src/vertupay/vertupay.controller.ts:14",{"_index":919,"title":{},"body":{"controllers/VertupayController.html":{}}}],["src/vertupay/vertupay.controller.ts:42",{"_index":921,"title":{},"body":{"controllers/VertupayController.html":{}}}],["src/vertupay/vertupay.module.ts",{"_index":945,"title":{},"body":{"modules/VertupayModule.html":{}}}],["src/vertupay/vertupay.service.ts",{"_index":964,"title":{},"body":{"injectables/VertupayService.html":{},"coverage.html":{}}}],["src/vertupay/vertupay.service.ts:108",{"_index":976,"title":{},"body":{"injectables/VertupayService.html":{}}}],["src/vertupay/vertupay.service.ts:19",{"_index":972,"title":{},"body":{"injectables/VertupayService.html":{}}}],["src/vertupay/vertupay.service.ts:29",{"_index":973,"title":{},"body":{"injectables/VertupayService.html":{}}}],["src/vertupay/vertupay.service.ts:33",{"_index":974,"title":{},"body":{"injectables/VertupayService.html":{}}}],["src/vertupay/vertupay.service.ts:39",{"_index":975,"title":{},"body":{"injectables/VertupayService.html":{}}}],["src/vertupay/vertupay.service.ts:47",{"_index":978,"title":{},"body":{"injectables/VertupayService.html":{}}}],["src/vertupay/vertupayapierror.ts",{"_index":908,"title":{},"body":{"classes/VertupayApiError.html":{},"coverage.html":{}}}],["src/vertupay/vertupayapierror.ts:1",{"_index":910,"title":{},"body":{"classes/VertupayApiError.html":{}}}],["start",{"_index":370,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{},"index.html":{}}}],["start.toisostring",{"_index":877,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["start:dev",{"_index":1140,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1141,"title":{},"body":{"index.html":{}}}],["started",{"_index":1119,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1131,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":21,"title":{},"body":{"classes/ApiListRow.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{}}}],["status",{"_index":451,"title":{},"body":{"entities/Transactions.html":{},"injectables/TransactionsService.html":{},"injectables/VertupayApiClient.html":{}}}],["stay",{"_index":1213,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1154,"title":{},"body":{"index.html":{}}}],["store",{"_index":1084,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["straightforward",{"_index":1171,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":303,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":25,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"classes/FindAllUserDto.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/LocalStrategy.html":{},"entities/Transactions.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{}}}],["struct/vertupay.account",{"_index":856,"title":{},"body":{"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["struct/vertupay.account.dto",{"_index":812,"title":{},"body":{"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["struct/vertupay.balance",{"_index":853,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["struct/vertupay.endpoints",{"_index":851,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["struct/vertupay.pay.dto",{"_index":750,"title":{},"body":{"entities/Vertupay.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{}}}],["struct/vertypay.list",{"_index":858,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["structure",{"_index":308,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["sub",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":551,"title":{},"body":{"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"controllers/VertupayController.html":{},"miscellaneous/enumerations.html":{}}}],["successful",{"_index":941,"title":{},"body":{"controllers/VertupayController.html":{}}}],["successfully",{"_index":651,"title":{},"body":{"controllers/UsersController.html":{}}}],["super",{"_index":312,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/TransactionsProcessor.html":{}}}],["super(message",{"_index":911,"title":{},"body":{"classes/VertupayApiError.html":{}}}],["support",{"_index":1192,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1243,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":502,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["synchronize",{"_index":274,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["table",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1155,"title":{},"body":{"index.html":{}}}],["test",{"_index":1144,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":1147,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1146,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1142,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1225,"title":{},"body":{"index.html":{}}}],["this.account_name",{"_index":768,"title":{},"body":{"entities/Vertupay.html":{}}}],["this.amount",{"_index":760,"title":{},"body":{"entities/Vertupay.html":{}}}],["this.appservice.gethello",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(username",{"_index":347,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.cachemanager.get('users.findall",{"_index":656,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.cachemanager.set('users.findall",{"_index":660,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.configservice.get(passkey",{"_index":822,"title":{},"body":{"injectables/VertupayAccountFactory.html":{}}}],["this.currency",{"_index":758,"title":{},"body":{"entities/Vertupay.html":{}}}],["this.database_password",{"_index":255,"title":{},"body":{"classes/DatabaseCredentials.html":{}}}],["this.database_user",{"_index":254,"title":{},"body":{"classes/DatabaseCredentials.html":{}}}],["this.date_request",{"_index":762,"title":{},"body":{"entities/Vertupay.html":{}}}],["this.db",{"_index":603,"title":{},"body":{"injectables/UsersConfig.html":{}}}],["this.eventemitter.emit",{"_index":1026,"title":{},"body":{"injectables/VertupayService.html":{}}}],["this.fundin",{"_index":791,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["this.fundout",{"_index":792,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["this.getaccounts",{"_index":1042,"title":{},"body":{"injectables/VertupayService.html":{}}}],["this.getbalance",{"_index":793,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["this.getpayoutlist(account",{"_index":896,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["this.getpayoutlist(accounts[0",{"_index":1043,"title":{},"body":{"injectables/VertupayService.html":{}}}],["this.handlevertupaycreatedevent",{"_index":427,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["this.hashsignature(account.getsignaturestring",{"_index":861,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["this.hasnextpage(body.page",{"_index":894,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["this.httpservice.post",{"_index":866,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["this.jwtservice.sign(payload",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.debug('called",{"_index":1038,"title":{},"body":{"injectables/VertupayService.html":{}}}],["this.logger.debug('start",{"_index":499,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["this.logger.debug(job.name",{"_index":501,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["this.logger.error(`job",{"_index":512,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["this.logger.log('cache",{"_index":657,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.logger.log('db",{"_index":714,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.log('dummy",{"_index":511,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["this.logger.log('findall",{"_index":655,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["this.logger.log(`request",{"_index":374,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{}}}],["this.logger.log(`this",{"_index":726,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.merchant_id",{"_index":754,"title":{},"body":{"entities/Vertupay.html":{}}}],["this.merchant_transaction_id",{"_index":752,"title":{},"body":{"entities/Vertupay.html":{}}}],["this.merchantid}${this.passkey",{"_index":805,"title":{},"body":{"classes/VertupayAccountDto.html":{}}}],["this.name",{"_index":912,"title":{},"body":{"classes/VertupayApiError.html":{}}}],["this.payment_type",{"_index":766,"title":{},"body":{"entities/Vertupay.html":{}}}],["this.transaction_id",{"_index":756,"title":{},"body":{"entities/Vertupay.html":{}}}],["this.transaction_status",{"_index":764,"title":{},"body":{"entities/Vertupay.html":{}}}],["this.transactionqueue.add('fromvertupay",{"_index":570,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.transactionsrepository.findoneby",{"_index":540,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.transactionsrepository.insert(transaction",{"_index":543,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.transactionsrepository.save(transaction",{"_index":548,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.transactionsservice.addtoqueuefromvertupay(event.pay",{"_index":412,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["this.transactionsservice.convertfromvertupaytotransaction",{"_index":430,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["this.transactionsservice.create(newtransaction",{"_index":439,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["this.transactionsservice.findonebypaymentid",{"_index":415,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["this.transactionsservice.save(updatedtransaction",{"_index":432,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["this.upsertpaylist(payoutlist",{"_index":1044,"title":{},"body":{"injectables/VertupayService.html":{}}}],["this.usersconfig.db.database_user",{"_index":715,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.create(createuserdto",{"_index":702,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":716,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findoneby",{"_index":727,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":704,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":649,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":659,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyname(username",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(id",{"_index":667,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":673,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":671,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.vertupayaccountfactory.createaccounts",{"_index":986,"title":{},"body":{"injectables/VertupayService.html":{}}}],["this.vertupayapiclient.getbalance(account",{"_index":987,"title":{},"body":{"injectables/VertupayService.html":{}}}],["this.vertupayapiclient.getpayoutlist(account",{"_index":988,"title":{},"body":{"injectables/VertupayService.html":{}}}],["this.vertupayrepository.find",{"_index":999,"title":{},"body":{"injectables/VertupayService.html":{}}}],["this.vertupayrepository.insert(rows",{"_index":1036,"title":{},"body":{"injectables/VertupayService.html":{}}}],["this.vertupayrepository.insert(toinsert",{"_index":1030,"title":{},"body":{"injectables/VertupayService.html":{}}}],["this.vertupayrepository.save(toupdate",{"_index":1024,"title":{},"body":{"injectables/VertupayService.html":{}}}],["this.vertupayservice.getaccounts",{"_index":925,"title":{},"body":{"controllers/VertupayController.html":{}}}],["this.vertupayservice.getbalance(accounts[0",{"_index":927,"title":{},"body":{"controllers/VertupayController.html":{}}}],["this.vertupayservice.getpayoutlist",{"_index":937,"title":{},"body":{"controllers/VertupayController.html":{}}}],["this.vertupayservice.upsertpaylist(payoutlist",{"_index":939,"title":{},"body":{"controllers/VertupayController.html":{}}}],["this.vertupayupserttransaction(vertupay",{"_index":508,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["throw",{"_index":348,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{}}}],["time",{"_index":1207,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":458,"title":{},"body":{"entities/Transactions.html":{},"entities/User.html":{}}}],["toinsert",{"_index":1011,"title":{},"body":{"injectables/VertupayService.html":{}}}],["toinsert.foreach((row",{"_index":1031,"title":{},"body":{"injectables/VertupayService.html":{}}}],["toinsert.length",{"_index":1029,"title":{},"body":{"injectables/VertupayService.html":{}}}],["toinsert.push(vertupay.fromapilistrow(item",{"_index":1018,"title":{},"body":{"injectables/VertupayService.html":{}}}],["took",{"_index":376,"title":{},"body":{"injectables/LoggerTimesMiddleware.html":{}}}],["total",{"_index":785,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["totalpages",{"_index":906,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["totalrows",{"_index":326,"title":{},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/VertupayApiClient.html":{},"interfaces/VertupayListResponse.html":{}}}],["touch",{"_index":1233,"title":{},"body":{"index.html":{}}}],["toupdate",{"_index":1010,"title":{},"body":{"injectables/VertupayService.html":{}}}],["toupdate.foreach((row",{"_index":1025,"title":{},"body":{"injectables/VertupayService.html":{}}}],["toupdate.length",{"_index":1021,"title":{},"body":{"injectables/VertupayService.html":{}}}],["toupdate.push(dbrow",{"_index":1017,"title":{},"body":{"injectables/VertupayService.html":{}}}],["transaction",{"_index":421,"title":{},"body":{"injectables/PayVertupayListener.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"injectables/VertupayService.html":{}}}],["transaction_at",{"_index":452,"title":{},"body":{"entities/Transactions.html":{}}}],["transaction_id",{"_index":738,"title":{},"body":{"entities/Vertupay.html":{},"injectables/VertupayService.html":{}}}],["transaction_status",{"_index":739,"title":{},"body":{"entities/Vertupay.html":{}}}],["transactionid",{"_index":18,"title":{},"body":{"classes/ApiListRow.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayListResponse.html":{}}}],["transactionids",{"_index":992,"title":{},"body":{"injectables/VertupayService.html":{}}}],["transactionqueue",{"_index":522,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactions",{"_index":263,"title":{"entities/Transactions.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"coverage.html":{}}}],["transactions.amount",{"_index":560,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactions.currency",{"_index":563,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactions.order_no",{"_index":567,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactions.payment_id",{"_index":558,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactions.payment_type",{"_index":565,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactions.processor",{"_index":483,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["transactions.service",{"_index":410,"title":{},"body":{"injectables/PayVertupayListener.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{}}}],["transactions.status",{"_index":559,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactions.transaction_at",{"_index":562,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactions/entities/transactions.entity",{"_index":264,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["transactions/payment.type",{"_index":51,"title":{},"body":{"classes/ApiListRow.html":{},"entities/Vertupay.html":{},"injectables/VertupayApiClient.html":{}}}],["transactions/transactions.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["transactionsmodule",{"_index":130,"title":{"modules/TransactionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionsModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionsprocessor",{"_index":482,"title":{"classes/TransactionsProcessor.html":{}},"body":{"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"coverage.html":{}}}],["transactionsrepository",{"_index":525,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactionsservice",{"_index":394,"title":{"injectables/TransactionsService.html":{}},"body":{"injectables/PayVertupayListener.html":{},"modules/TransactionsModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"coverage.html":{},"overview.html":{}}}],["transactionstatus",{"_index":19,"title":{},"body":{"classes/ApiListRow.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"interfaces/VertupayListResponse.html":{}}}],["transcoding",{"_index":500,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["transform",{"_index":288,"title":{},"body":{"classes/FindAllUserDto.html":{}}}],["transformer",{"_index":289,"title":{},"body":{"classes/FindAllUserDto.html":{},"classes/TransactionsProcessor.html":{},"dependencies.html":{}}}],["true",{"_index":281,"title":{},"body":{"modules/DatabaseModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"controllers/VertupayController.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":414,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{}}}],["twitter",{"_index":1239,"title":{},"body":{"index.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/ApiListRow.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseCredentials.html":{},"modules/DatabaseModule.html":{},"classes/FindAllUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{},"injectables/PayVertupayListener.html":{},"entities/Transactions.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"injectables/UsersConfig.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Vertupay.html":{},"classes/VertupayAccountBalanceDto.html":{},"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"interfaces/VertupayListResponse.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":473,"title":{},"body":{"entities/Transactions.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"entities/Vertupay.html":{},"injectables/VertupayService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":257,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VertupayModule.html":{}}}],["typeormmodule.forfeature([transactions",{"_index":484,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":681,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([vertupay",{"_index":953,"title":{},"body":{"modules/VertupayModule.html":{}}}],["typeormmodule.forroot",{"_index":265,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":576,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":1130,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":345,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unit",{"_index":1143,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":615,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VertupayController.html":{}}}],["unlicensed",{"_index":1254,"title":{},"body":{"properties.html":{}}}],["update",{"_index":426,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VertupayService.html":{},"miscellaneous/enumerations.html":{}}}],["update(@param('id",{"_index":670,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":624,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updated",{"_index":434,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["updated.event",{"_index":409,"title":{},"body":{"injectables/PayVertupayListener.html":{},"injectables/VertupayService.html":{}}}],["updated.event.ts",{"_index":961,"title":{},"body":{"classes/VertupayPayUpdatedEvent.html":{},"coverage.html":{}}}],["updated.event.ts:3",{"_index":962,"title":{},"body":{"classes/VertupayPayUpdatedEvent.html":{}}}],["updated.event.ts:4",{"_index":963,"title":{},"body":{"classes/VertupayPayUpdatedEvent.html":{}}}],["updated_at",{"_index":453,"title":{},"body":{"entities/Transactions.html":{},"entities/User.html":{}}}],["updatedtransaction",{"_index":429,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{}}}],["updatefromapilistrow(apilistrow",{"_index":751,"title":{},"body":{"entities/Vertupay.html":{}}}],["updates",{"_index":730,"title":{},"body":{"injectables/UsersService.html":{},"injectables/VertupayService.html":{},"index.html":{}}}],["updateuserdto",{"_index":571,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uppercase",{"_index":903,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["upsertpaylist",{"_index":967,"title":{},"body":{"injectables/VertupayService.html":{}}}],["upsertpaylist(list",{"_index":977,"title":{},"body":{"injectables/VertupayService.html":{}}}],["url",{"_index":361,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use",{"_index":351,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/UsersModule.html":{},"injectables/VertupayApiClient.html":{},"miscellaneous/variables.html":{}}}],["use(req",{"_index":352,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{}}}],["usefactory",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":111,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard)@post",{"_index":613,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":104,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard)@post('auth/login",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard)@post('auth/logout",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":98,"title":{"entities/User.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/DatabaseCredentials.html":{},"modules/DatabaseModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.age",{"_index":710,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto",{"_index":577,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindAllUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":285,"title":{},"body":{"classes/FindAllUserDto.html":{}}}],["user.dto.ts:11",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:15",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":286,"title":{},"body":{"classes/FindAllUserDto.html":{}}}],["user.dto.ts:7",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.firstname",{"_index":706,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.id",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.lastname",{"_index":708,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.roles",{"_index":712,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{}}}],["userrole",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["users",{"_index":608,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.config",{"_index":679,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":678,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":635,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/entities/user.entity",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["users/users.module",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersconfig",{"_index":596,"title":{"injectables/UsersConfig.html":{}},"body":{"injectables/UsersConfig.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userscontroller",{"_index":606,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":131,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":689,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":205,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":881,"title":{},"body":{"injectables/VertupayApiClient.html":{},"injectables/VertupayService.html":{},"index.html":{}}}],["utility/response.message.code",{"_index":639,"title":{},"body":{"controllers/UsersController.html":{},"controllers/VertupayController.html":{}}}],["utility/utility.module",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["utilitymodule",{"_index":132,"title":{"modules/UtilityModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["validate",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":317,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":343,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindAllUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":290,"title":{},"body":{"classes/FindAllUserDto.html":{},"injectables/LoggerTimesMiddleware.html":{},"classes/TransactionsProcessor.html":{},"injectables/UsersService.html":{},"injectables/VertupayApiClient.html":{},"injectables/VertupayService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1255,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1252,"title":{},"body":{"properties.html":{}}}],["vertupay",{"_index":261,"title":{"entities/Vertupay.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"entities/Vertupay.html":{},"controllers/VertupayController.html":{},"modules/VertupayModule.html":{},"classes/VertupayPayCreatedEvent.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{},"coverage.html":{}}}],["vertupay.account",{"_index":946,"title":{},"body":{"modules/VertupayModule.html":{},"injectables/VertupayService.html":{}}}],["vertupay.account_name",{"_index":773,"title":{},"body":{"entities/Vertupay.html":{}}}],["vertupay.amount",{"_index":561,"title":{},"body":{"injectables/TransactionsService.html":{},"entities/Vertupay.html":{}}}],["vertupay.api",{"_index":949,"title":{},"body":{"modules/VertupayModule.html":{},"injectables/VertupayService.html":{}}}],["vertupay.balance",{"_index":790,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["vertupay.controller",{"_index":948,"title":{},"body":{"modules/VertupayModule.html":{}}}],["vertupay.currency",{"_index":564,"title":{},"body":{"injectables/TransactionsService.html":{},"entities/Vertupay.html":{}}}],["vertupay.date_request",{"_index":772,"title":{},"body":{"entities/Vertupay.html":{}}}],["vertupay.date_request.replace(/\\//g",{"_index":555,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["vertupay.merchant_id",{"_index":771,"title":{},"body":{"entities/Vertupay.html":{}}}],["vertupay.merchant_transaction_id",{"_index":568,"title":{},"body":{"injectables/TransactionsService.html":{},"entities/Vertupay.html":{}}}],["vertupay.pay.create",{"_index":1115,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vertupay.pay.update",{"_index":1114,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vertupay.payment_type",{"_index":566,"title":{},"body":{"injectables/TransactionsService.html":{},"entities/Vertupay.html":{}}}],["vertupay.service",{"_index":923,"title":{},"body":{"controllers/VertupayController.html":{},"modules/VertupayModule.html":{}}}],["vertupay.transaction_id",{"_index":416,"title":{},"body":{"injectables/PayVertupayListener.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{},"entities/Vertupay.html":{}}}],["vertupay.transaction_status",{"_index":550,"title":{},"body":{"injectables/TransactionsService.html":{},"entities/Vertupay.html":{}}}],["vertupay/entities/vertupay.entity",{"_index":262,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/TransactionsProcessor.html":{},"injectables/TransactionsService.html":{}}}],["vertupay/events/vertupay.events",{"_index":407,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["vertupay/events/vertupay.pay",{"_index":408,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["vertupay/vertupay.module",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["vertupay_p2p_pass",{"_index":816,"title":{},"body":{"injectables/VertupayAccountFactory.html":{}}}],["vertupay_qris_pass",{"_index":818,"title":{},"body":{"injectables/VertupayAccountFactory.html":{}}}],["vertupay_va_pass",{"_index":820,"title":{},"body":{"injectables/VertupayAccountFactory.html":{}}}],["vertupayaccountbalancedto",{"_index":774,"title":{"classes/VertupayAccountBalanceDto.html":{}},"body":{"classes/VertupayAccountBalanceDto.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{},"coverage.html":{}}}],["vertupayaccountbalancedto.createfromapiresponse(response",{"_index":873,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["vertupayaccountdto",{"_index":796,"title":{"classes/VertupayAccountDto.html":{}},"body":{"classes/VertupayAccountDto.html":{},"injectables/VertupayAccountFactory.html":{},"injectables/VertupayApiClient.html":{},"controllers/VertupayController.html":{},"injectables/VertupayService.html":{},"coverage.html":{}}}],["vertupayaccountfactory",{"_index":806,"title":{"injectables/VertupayAccountFactory.html":{}},"body":{"injectables/VertupayAccountFactory.html":{},"modules/VertupayModule.html":{},"injectables/VertupayService.html":{},"coverage.html":{},"overview.html":{}}}],["vertupayapiclient",{"_index":824,"title":{"injectables/VertupayApiClient.html":{}},"body":{"injectables/VertupayApiClient.html":{},"modules/VertupayModule.html":{},"injectables/VertupayService.html":{},"coverage.html":{},"overview.html":{}}}],["vertupayapierror",{"_index":852,"title":{"classes/VertupayApiError.html":{}},"body":{"injectables/VertupayApiClient.html":{},"classes/VertupayApiError.html":{},"controllers/VertupayController.html":{},"coverage.html":{}}}],["vertupaybalanceresponse",{"_index":787,"title":{"interfaces/VertupayBalanceResponse.html":{}},"body":{"classes/VertupayAccountBalanceDto.html":{},"injectables/VertupayApiClient.html":{},"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"coverage.html":{}}}],["vertupaybalanceresponse.content.balancefundin",{"_index":794,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["vertupaybalanceresponse.content.balancefundout",{"_index":795,"title":{},"body":{"classes/VertupayAccountBalanceDto.html":{}}}],["vertupaycontroller",{"_index":917,"title":{"controllers/VertupayController.html":{}},"body":{"controllers/VertupayController.html":{},"modules/VertupayModule.html":{},"coverage.html":{}}}],["vertupayendpoints",{"_index":850,"title":{},"body":{"injectables/VertupayApiClient.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vertupayendpoints.payin_balance",{"_index":867,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["vertupayendpoints.payout_list",{"_index":880,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["vertupayfundinout",{"_index":914,"title":{"interfaces/VertupayFundInOut.html":{}},"body":{"interfaces/VertupayBalanceResponse.html":{},"interfaces/VertupayFundInOut.html":{},"coverage.html":{}}}],["vertupaylistevents",{"_index":406,"title":{},"body":{"injectables/PayVertupayListener.html":{},"injectables/VertupayService.html":{},"miscellaneous/enumerations.html":{}}}],["vertupaylistevents.create",{"_index":1032,"title":{},"body":{"injectables/VertupayService.html":{}}}],["vertupaylistevents.update",{"_index":1027,"title":{},"body":{"injectables/VertupayService.html":{}}}],["vertupaylistresponse",{"_index":327,"title":{"interfaces/VertupayListResponse.html":{}},"body":{"interfaces/ListContent.html":{},"interfaces/ListRow.html":{},"injectables/VertupayApiClient.html":{},"interfaces/VertupayListResponse.html":{},"coverage.html":{}}}],["vertupaymodule",{"_index":133,"title":{"modules/VertupayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VertupayModule.html":{},"modules.html":{},"overview.html":{}}}],["vertupaypaycreatedevent",{"_index":397,"title":{"classes/VertupayPayCreatedEvent.html":{}},"body":{"injectables/PayVertupayListener.html":{},"classes/VertupayPayCreatedEvent.html":{},"injectables/VertupayService.html":{},"coverage.html":{}}}],["vertupaypaycreatedevent(row",{"_index":1033,"title":{},"body":{"injectables/VertupayService.html":{}}}],["vertupaypaymenttype.withdraw",{"_index":888,"title":{},"body":{"injectables/VertupayApiClient.html":{}}}],["vertupaypayupdatedevent",{"_index":402,"title":{"classes/VertupayPayUpdatedEvent.html":{}},"body":{"injectables/PayVertupayListener.html":{},"classes/VertupayPayUpdatedEvent.html":{},"injectables/VertupayService.html":{},"coverage.html":{}}}],["vertupaypayupdatedevent(row",{"_index":1028,"title":{},"body":{"injectables/VertupayService.html":{}}}],["vertupaypayupdatedevent(vertupay",{"_index":428,"title":{},"body":{"injectables/PayVertupayListener.html":{}}}],["vertupayrepository",{"_index":969,"title":{},"body":{"injectables/VertupayService.html":{}}}],["vertupayservice",{"_index":922,"title":{"injectables/VertupayService.html":{}},"body":{"controllers/VertupayController.html":{},"modules/VertupayModule.html":{},"injectables/VertupayService.html":{},"coverage.html":{},"overview.html":{}}}],["vertupayupserttransaction",{"_index":487,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["vertupayupserttransaction(vertupay",{"_index":492,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["vertypay.list",{"_index":49,"title":{},"body":{"classes/ApiListRow.html":{}}}],["video",{"_index":1200,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1189,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1203,"title":{},"body":{"index.html":{}}}],["void",{"_index":357,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerTimesMiddleware.html":{},"modules/MiddlewaresModule.html":{}}}],["vs",{"_index":1034,"title":{},"body":{"injectables/VertupayService.html":{}}}],["watch",{"_index":1138,"title":{},"body":{"index.html":{}}}],["website",{"_index":1237,"title":{},"body":{"index.html":{}}}],["withdraw",{"_index":1106,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["workerhost",{"_index":495,"title":{},"body":{"classes/TransactionsProcessor.html":{}}}],["working",{"_index":1188,"title":{},"body":{"index.html":{}}}],["world",{"_index":178,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":1216,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1229,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1148,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VertupayModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiListRow.html":{"url":"classes/ApiListRow.html","title":"class - ApiListRow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiListRow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/struct/vertupay.pay.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                accountName\n                            \n                            \n                                    Public\n                                    Readonly\n                                amount\n                            \n                            \n                                    Public\n                                    Readonly\n                                currency\n                            \n                            \n                                    Public\n                                    Readonly\n                                dateRequest\n                            \n                            \n                                    Public\n                                    Readonly\n                                merchantID\n                            \n                            \n                                    Public\n                                    Readonly\n                                merchantTransactionID\n                            \n                            \n                                    Public\n                                    Readonly\n                                paymentType\n                            \n                            \n                                    Public\n                                    Readonly\n                                transactionID\n                            \n                            \n                                    Public\n                                    Readonly\n                                transactionStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createFromApiResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(merchantTransactionID: string, merchantID: string, transactionID: string, currency: string, amount: number, dateRequest: string, transactionStatus: string, paymentType: PaymentType, accountName: string)\n                    \n                \n                        \n                            \n                                Defined in src/vertupay/struct/vertupay.pay.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        merchantTransactionID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        merchantID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionID\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currency\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        amount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateRequest\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionStatus\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentType\n                                                  \n                                                        \n                                                                        PaymentType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        accountName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/struct/vertupay.pay.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/struct/vertupay.pay.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/struct/vertupay.pay.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        dateRequest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/struct/vertupay.pay.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        merchantID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/struct/vertupay.pay.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        merchantTransactionID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/struct/vertupay.pay.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        paymentType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentType\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/struct/vertupay.pay.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        transactionID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/struct/vertupay.pay.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        transactionStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/struct/vertupay.pay.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        createFromApiResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFromApiResponse(data: ListRow, paymentType: PaymentType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/struct/vertupay.pay.dto.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ListRow\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                paymentType\n                                            \n                                                            PaymentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ApiListRow\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ListRow } from './vertypay.list-response';\nimport { PaymentType } from '../../transactions/payment.type';\n\nexport class ApiListRow {\n  constructor(\n    public readonly merchantTransactionID: string,\n    public readonly merchantID: string,\n    public readonly transactionID: string,\n    public readonly currency: string,\n    public readonly amount: number,\n    public readonly dateRequest: string,\n    public readonly transactionStatus: string,\n    public readonly paymentType: PaymentType,\n    public readonly accountName: string,\n  ) {}\n\n  static createFromApiResponse(\n    data: ListRow,\n    paymentType: PaymentType,\n  ): ApiListRow {\n    return new ApiListRow(\n      data.MerchantTransactionID,\n      data.MerchantID,\n      data.TransactionID,\n      data.Currency,\n      data.Amount,\n      data.DateRequest,\n      data.TransactionStatus,\n      paymentType,\n      data.BankAccountName ?? '',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req: ExpressRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        ExpressRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req: ExpressRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/login')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        ExpressRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(req: ExpressRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/logout')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        ExpressRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Request, UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Request as ExpressRequest } from 'express';\nimport { LocalAuthGuard } from './auth/local-auth.guard';\nimport { AuthService } from './auth/auth.service';\nimport { User } from './users/entities/user.entity';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly authService: AuthService,\n  ) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  login(@Request() req: ExpressRequest) {\n    return this.authService.login(req.user as User);\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/logout')\n  logout(@Request() req: ExpressRequest) {\n    return req.logout(() => {});\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  getProfile(@Request() req: ExpressRequest) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nMiddlewaresModule\n\nMiddlewaresModule\n\nAppModule -->\n\nMiddlewaresModule->AppModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nAppModule -->\n\nTransactionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nAppModule -->\n\nUtilityModule->AppModule\n\n\n\n\n\nVertupayModule\n\nVertupayModule\n\nAppModule -->\n\nVertupayModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            MiddlewaresModule\n                        \n                        \n                            TransactionsModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            UtilityModule\n                        \n                        \n                            VertupayModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { MiddlewaresModule } from './middlewares/middlewares.module';\nimport { UtilityModule } from './utility/utility.module';\nimport { DatabaseModule } from './database/database.module';\nimport { CacheModule } from '@nestjs/cache-manager';\nimport { RedisOptions } from './redis.options';\nimport { AuthModule } from './auth/auth.module';\nimport { VertupayModule } from './vertupay/vertupay.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { TransactionsModule } from './transactions/transactions.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { BullModule } from '@nestjs/bullmq';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    CacheModule.registerAsync(RedisOptions),\n    EventEmitterModule.forRoot(),\n    ScheduleModule.forRoot(),\n    BullModule.forRoot({\n      connection: {\n        host: 'redis',\n        port: 6379,\n      },\n      prefix: 'job',\n    }),\n    MiddlewaresModule,\n    UtilityModule,\n    DatabaseModule,\n    UsersModule,\n    AuthModule,\n    VertupayModule,\n    TransactionsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60m' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { access_token: any; user: User; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { User } from '../users/entities/user.entity';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  //async validateUser(username: string, pass: string): Promise {\n  async validateUser(username: string): Promise {\n    const user = await this.usersService.findByName(username);\n\n    if (user) {\n      // const { password, ...result } = user;\n      return user;\n    }\n    return null;\n  }\n\n  login(user: User) {\n    const payload = { user: user, sub: user.id };\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNotEmpty, IsNumber, IsString } from 'class-validator';\nimport { UserRole } from '../enum/user.role';\n\nexport class CreateUserDto {\n  @IsNotEmpty()\n  @IsString()\n  firstName: string;\n\n  @IsNotEmpty()\n  @IsString()\n  lastName: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  age: number;\n\n  @IsArray()\n  roles: UserRole[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseCredentials.html":{"url":"classes/DatabaseCredentials.html","title":"class - DatabaseCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/database.credentials.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DATABASE_PASSWORD\n                            \n                            \n                                DATABASE_USER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/users/database.credentials.class.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/database.credentials.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/database.credentials.class.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DatabaseCredentials {\n  DATABASE_USER: string;\n  DATABASE_PASSWORD: string;\n\n  constructor(user: string, password: string) {\n    this.DATABASE_USER = user;\n    this.DATABASE_PASSWORD = password;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../users/entities/user.entity';\nimport * as process from 'node:process';\nimport { Vertupay } from '../vertupay/entities/vertupay.entity';\nimport { Transactions } from '../transactions/entities/transactions.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: process.env.MYSQL_HOST,\n      port: 3306,\n      username: process.env.MYSQL_USER,\n      password: process.env.MYSQL_PASSWORD,\n      database: process.env.MYSQL_DATABASE,\n      entities: [User, Vertupay, Transactions],\n      synchronize: process.env.NODE_ENV === 'local', // set to false in production\n      logging: true,\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAllUserDto.html":{"url":"classes/FindAllUserDto.html","title":"class - FindAllUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAllUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/find-all-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                age\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Transform( => )@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/find-all-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/find-all-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional } from 'class-validator';\nimport { Transform } from 'class-transformer';\n\nexport class FindAllUserDto {\n  name: string;\n\n  @IsOptional()\n  @Transform(({ value }) => Number(value)) // Transform string to number\n  @IsNumber()\n  age: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { jwtConstants } from './constants';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { User } from '../users/entities/user.entity';\n\ninterface JwtPayload {\n  user: User; // Adjust based on your User structure\n  // Add other properties if needed\n}\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  validate(payload: JwtPayload): User {\n    return payload.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: JwtPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { jwtConstants } from './constants';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { User } from '../users/entities/user.entity';\n\ninterface JwtPayload {\n  user: User; // Adjust based on your User structure\n  // Add other properties if needed\n}\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  validate(payload: JwtPayload): User {\n    return payload.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListContent.html":{"url":"interfaces/ListContent.html","title":"interface - ListContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/struct/vertypay.list-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Data\n                                        \n                                \n                                \n                                        \n                                            Page\n                                        \n                                \n                                \n                                        \n                                            TotalRows\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Data:         ListRow[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListRow[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TotalRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TotalRows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface VertupayListResponse {\n  Content: ListContent;\n  ResultCode: number;\n  ErrorMessage: string;\n}\n\nexport interface ListContent {\n  Page: number;\n  TotalRows: number;\n  Data: ListRow[];\n}\n\nexport interface ListRow {\n  MerchantTransactionID: string;\n  MerchantID: string;\n  TransactionID: string;\n  Currency: string;\n  Amount: number;\n  DateRequest: string;\n  TransactionStatus: string;\n  BankCode: string;\n  BankName: string;\n  BankAccountNo: string;\n  BankAccountName: string;\n  BankBranch: string;\n  BankCity: string;\n  BankProvince: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListRow.html":{"url":"interfaces/ListRow.html","title":"interface - ListRow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListRow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/struct/vertypay.list-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Amount\n                                        \n                                \n                                \n                                        \n                                            BankAccountName\n                                        \n                                \n                                \n                                        \n                                            BankAccountNo\n                                        \n                                \n                                \n                                        \n                                            BankBranch\n                                        \n                                \n                                \n                                        \n                                            BankCity\n                                        \n                                \n                                \n                                        \n                                            BankCode\n                                        \n                                \n                                \n                                        \n                                            BankName\n                                        \n                                \n                                \n                                        \n                                            BankProvince\n                                        \n                                \n                                \n                                        \n                                            Currency\n                                        \n                                \n                                \n                                        \n                                            DateRequest\n                                        \n                                \n                                \n                                        \n                                            MerchantID\n                                        \n                                \n                                \n                                        \n                                            MerchantTransactionID\n                                        \n                                \n                                \n                                        \n                                            TransactionID\n                                        \n                                \n                                \n                                        \n                                            TransactionStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BankAccountName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BankAccountName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BankAccountNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BankAccountNo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BankBranch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BankBranch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BankCity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BankCity:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BankCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BankCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BankName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BankName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BankProvince\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BankProvince:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DateRequest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DateRequest:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MerchantID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MerchantID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MerchantTransactionID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MerchantTransactionID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TransactionID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TransactionID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TransactionStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TransactionStatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface VertupayListResponse {\n  Content: ListContent;\n  ResultCode: number;\n  ErrorMessage: string;\n}\n\nexport interface ListContent {\n  Page: number;\n  TotalRows: number;\n  Data: ListRow[];\n}\n\nexport interface ListRow {\n  MerchantTransactionID: string;\n  MerchantID: string;\n  TransactionID: string;\n  Currency: string;\n  Amount: number;\n  DateRequest: string;\n  TransactionStatus: string;\n  BankCode: string;\n  BankName: string;\n  BankAccountNo: string;\n  BankAccountName: string;\n  BankBranch: string;\n  BankCity: string;\n  BankProvince: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/local.strategy.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from './auth.service';\nimport { User } from '../users/entities/user.entity';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string): Promise {\n    const user: User | null = await this.authService.validateUser(username);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/middlewares/logger.middleware.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    console.log(`Request URL: ${req.ip}`);\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerTimesMiddleware.html":{"url":"injectables/LoggerTimesMiddleware.html","title":"injectable - LoggerTimesMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerTimesMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/logger.times.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/middlewares/logger.times.middleware.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LoggerTimesMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/middlewares/logger.times.middleware.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class LoggerTimesMiddleware implements NestMiddleware {\n  private readonly logger = new Logger(LoggerTimesMiddleware.name);\n  use(req: Request, res: Response, next: NextFunction) {\n    const start = Date.now();\n\n    res.on('finish', () => {\n      const duration = Date.now() - start;\n      this.logger.log(`Request to ${req.originalUrl} took ${duration}ms`);\n    });\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MiddlewaresModule.html":{"url":"modules/MiddlewaresModule.html","title":"module - MiddlewaresModule","body":"\n                   \n\n\n\n\n    Modules\n    MiddlewaresModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/middlewares/middlewares.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/middlewares/middlewares.module.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { LoggerMiddleware } from './logger.middleware';\nimport { LoggerTimesMiddleware } from './logger.times.middleware';\n\n@Module({})\nexport class MiddlewaresModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LoggerMiddleware).forRoutes('users');\n    consumer.apply(LoggerTimesMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PayVertupayListener.html":{"url":"injectables/PayVertupayListener.html","title":"injectable - PayVertupayListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PayVertupayListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/listeners/pay.vertupay.listener.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handleVertupayCreatedEvent\n                            \n                            \n                                    \n                                    Async\n                                handleVertupayUpdatedEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionsService: TransactionsService)\n                    \n                \n                        \n                            \n                                Defined in src/transactions/listeners/pay.vertupay.listener.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionsService\n                                                  \n                                                        \n                                                                        TransactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleVertupayCreatedEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleVertupayCreatedEvent(event: VertupayPayCreatedEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent(VertupayListEvents.Create)\n                \n            \n\n                    \n                        \n                            Defined in src/transactions/listeners/pay.vertupay.listener.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            VertupayPayCreatedEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleVertupayUpdatedEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleVertupayUpdatedEvent(event: VertupayPayUpdatedEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent(VertupayListEvents.Update)\n                \n            \n\n                    \n                        \n                            Defined in src/transactions/listeners/pay.vertupay.listener.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            VertupayPayUpdatedEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OnEvent } from '@nestjs/event-emitter';\nimport { VertupayListEvents } from '../../vertupay/events/vertupay.events';\nimport { VertupayPayUpdatedEvent } from '../../vertupay/events/vertupay.pay-updated.event';\nimport { TransactionsService } from '../transactions.service';\nimport { VertupayPayCreatedEvent } from '../../vertupay/events/vertupay.pay-created.event';\n\n@Injectable()\nexport class PayVertupayListener {\n  constructor(private readonly transactionsService: TransactionsService) {}\n\n  @OnEvent(VertupayListEvents.Update)\n  async handleVertupayUpdatedEvent(\n    event: VertupayPayUpdatedEvent,\n  ): Promise {\n    await this.transactionsService.addToQueueFromVertupay(event.pay);\n\n    // let dbRow;\n    //\n    // try {\n    //   dbRow = await this.transactionsService.findOneByPaymentId(\n    //     vertupay.transaction_id,\n    //   );\n    // } catch (findError) {\n    //   console.error('Error finding transaction by payment ID:', findError);\n    //   return;\n    // }\n    //\n    // if (!dbRow) {\n    //   console.warn(\n    //     `Transaction with ID ${vertupay.transaction_id} not found for update.`,\n    //   );\n    //   await this.handleVertupayCreatedEvent(\n    //     new VertupayPayUpdatedEvent(vertupay),\n    //   );\n    //   return;\n    // }\n    //\n    // const updatedTransaction =\n    //   this.transactionsService.convertFromVertupayToTransaction(\n    //     dbRow,\n    //     vertupay,\n    //   );\n    // console.log(updatedTransaction.ping());\n    // try {\n    //   await this.transactionsService.save(updatedTransaction);\n    //   console.log(`Transaction updated for ID: ${vertupay.transaction_id}`);\n    // } catch (saveError) {\n    //   console.error('Error saving updated transaction:', saveError);\n    // }\n  }\n\n  @OnEvent(VertupayListEvents.Create)\n  async handleVertupayCreatedEvent(\n    event: VertupayPayCreatedEvent,\n  ): Promise {\n    await this.transactionsService.addToQueueFromVertupay(event.pay);\n\n    // try {\n    //   const newTransaction =\n    //     this.transactionsService.convertFromVertupayToTransaction(\n    //       new Transactions(),\n    //       event.pay,\n    //     );\n    //   await this.transactionsService.create(newTransaction);\n    //   console.log(`Transaction created for ID: ${event.pay.transaction_id}`);\n    // } catch (error) {\n    //   console.error('Error handling Vertupay create event:', error);\n    // }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Transactions.html":{"url":"entities/Transactions.html","title":"entity - Transactions","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Transactions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/entities/transactions.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                currency\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                order_no\n                            \n                            \n                                    \n                                payment_id\n                            \n                            \n                                    \n                                payment_type\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                transaction_at\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'double'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transactions.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transactions.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transactions.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transactions.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order_no\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transactions.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transactions.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transactions.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transactions.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transaction_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transactions.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transactions.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { PaymentStatus, PaymentType } from '../payment.type';\n\n@Entity()\nexport class Transactions {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  payment_id: string;\n\n  @Column()\n  payment_type: PaymentType;\n\n  @Column({\n    type: 'double',\n  })\n  amount: number;\n\n  @Column()\n  currency: string;\n\n  @Column({ type: 'timestamp' })\n  transaction_at: Date;\n\n  @Column()\n  status: PaymentStatus;\n\n  @Column()\n  order_no: string;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: Date;\n\n  @Column({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updated_at: Date;\n\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionsModule.html":{"url":"modules/TransactionsModule.html","title":"module - TransactionsModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionsModule\n\n\n\ncluster_TransactionsModule_providers\n\n\n\n\nPayVertupayListener\n\nPayVertupayListener\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nTransactionsModule -->\n\nPayVertupayListener->TransactionsModule\n\n\n\n\n\nTransactionsService\n\nTransactionsService\n\nTransactionsModule -->\n\nTransactionsService->TransactionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/transactions/transactions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PayVertupayListener\n                        \n                        \n                            TransactionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PayVertupayListener } from './listeners/pay.vertupay.listener';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Transactions } from './entities/transactions.entity';\nimport { TransactionsService } from './transactions.service';\nimport { BullModule } from '@nestjs/bullmq';\nimport { TransactionsProcessor } from './transactions.processor';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Transactions]),\n    BullModule.registerQueue({\n      name: 'transaction',\n    }),\n  ],\n  providers: [PayVertupayListener, TransactionsService, TransactionsProcessor],\n})\nexport class TransactionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionsProcessor.html":{"url":"classes/TransactionsProcessor.html","title":"class - TransactionsProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionsProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/transactions.processor.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                process\n                            \n                            \n                                    Async\n                                vertupayUpsertTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionsService: TransactionsService)\n                    \n                \n                        \n                            \n                                Defined in src/transactions/transactions.processor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionsService\n                                                  \n                                                        \n                                                                        TransactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TransactionsProcessor.name)\n                    \n                \n                    \n                        \n                                Defined in src/transactions/transactions.processor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        process\n                        \n                    \n                \n            \n            \n                \n                        \n                    process(job: Job)\n                \n            \n\n\n                    \n                        \n                            Defined in src/transactions/transactions.processor.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        vertupayUpsertTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    vertupayUpsertTransaction(vertupay: Vertupay)\n                \n            \n\n\n                    \n                        \n                            Defined in src/transactions/transactions.processor.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vertupay\n                                            \n                                                            Vertupay\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Processor, WorkerHost } from '@nestjs/bullmq';\nimport { Logger } from '@nestjs/common';\nimport { Job } from 'bullmq';\nimport { Vertupay } from '../vertupay/entities/vertupay.entity';\nimport { plainToInstance } from 'class-transformer';\nimport { TransactionsService } from './transactions.service';\nimport { Transactions } from './entities/transactions.entity';\n\n@Processor('transaction')\nexport class TransactionsProcessor extends WorkerHost {\n  private readonly logger = new Logger(TransactionsProcessor.name);\n\n  constructor(private readonly transactionsService: TransactionsService) {\n    super();\n  }\n  async process(job: Job): Promise {\n    this.logger.debug('Start transcoding...');\n    this.logger.debug(job.name);\n\n    switch (job.name) {\n      case 'fromVertupay': {\n        const vertupay = plainToInstance(Vertupay, job.data);\n        await this.vertupayUpsertTransaction(vertupay);\n        break;\n      }\n      case 'dummy': {\n        this.logger.log('dummy');\n        break;\n      }\n      default: {\n        this.logger.error(`job name not match: ${job.name}`);\n        break;\n      }\n    }\n  }\n\n  async vertupayUpsertTransaction(vertupay: Vertupay) {\n    let dbRow;\n\n    try {\n      dbRow = await this.transactionsService.findOneByPaymentId(\n        vertupay.transaction_id,\n      );\n    } catch (findError) {\n      console.error('Error finding transaction by payment ID:', findError);\n      return;\n    }\n\n    if (!dbRow) {\n      // insert\n      console.warn(\n        `Transaction with ID ${vertupay.transaction_id} not found for update.`,\n      );\n      try {\n        const newTransaction =\n          this.transactionsService.convertFromVertupayToTransaction(\n            new Transactions(),\n            vertupay,\n          );\n        await this.transactionsService.create(newTransaction);\n        console.log(`Transaction created for ID: ${vertupay.transaction_id}`);\n      } catch (error) {\n        console.error('Error handling Vertupay create event:', error);\n      }\n      return;\n    }\n\n    // update\n    const updatedTransaction =\n      this.transactionsService.convertFromVertupayToTransaction(\n        dbRow,\n        vertupay,\n      );\n    console.log(updatedTransaction.ping());\n    try {\n      await this.transactionsService.save(updatedTransaction);\n      console.log(`Transaction updated for ID: ${vertupay.transaction_id}`);\n    } catch (saveError) {\n      console.error('Error saving updated transaction:', saveError);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionsService.html":{"url":"injectables/TransactionsService.html","title":"injectable - TransactionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/transactions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToQueueFromVertupay\n                            \n                            \n                                convertFromVertupayToTransaction\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOneByPaymentId\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionsRepository: Repository, transactionQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/transactions/transactions.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addToQueueFromVertupay\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToQueueFromVertupay(vertupay: Vertupay)\n                \n            \n\n\n                    \n                        \n                            Defined in src/transactions/transactions.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vertupay\n                                            \n                                                            Vertupay\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertFromVertupayToTransaction\n                        \n                    \n                \n            \n            \n                \nconvertFromVertupayToTransaction(transactions: Transactions, vertupay: Vertupay)\n                \n            \n\n\n                    \n                        \n                            Defined in src/transactions/transactions.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transactions\n                                            \n                                                            Transactions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vertupay\n                                            \n                                                            Vertupay\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Transactions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(transaction: Transactions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/transactions/transactions.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transaction\n                                            \n                                                            Transactions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByPaymentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByPaymentId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/transactions/transactions.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                        \n                    save(transaction: Transactions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/transactions/transactions.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transaction\n                                            \n                                                            Transactions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Transactions } from './entities/transactions.entity';\nimport { Vertupay } from '../vertupay/entities/vertupay.entity';\nimport { PaymentStatus } from './payment.type';\nimport { InjectQueue } from '@nestjs/bullmq';\nimport { Queue } from 'bullmq';\n\n@Injectable()\nexport class TransactionsService {\n  constructor(\n    @InjectRepository(Transactions)\n    private transactionsRepository: Repository,\n    @InjectQueue('transaction')\n    private transactionQueue: Queue,\n  ) {}\n\n  async findOneByPaymentId(id: string): Promise {\n    try {\n      return await this.transactionsRepository.findOneBy({ payment_id: id });\n    } catch (error) {\n      console.error('Error finding transaction by payment ID:', error);\n      throw new Error('Could not find transaction');\n    }\n  }\n\n  async create(transaction: Transactions): Promise {\n    try {\n      await this.transactionsRepository.insert(transaction);\n    } catch (error) {\n      console.error('Error creating transaction:', error);\n      throw new Error('Transaction creation failed');\n    }\n  }\n\n  async save(transaction: Transactions): Promise {\n    try {\n      await this.transactionsRepository.save(transaction);\n    } catch (error) {\n      console.error('Error saving transaction:', error);\n      throw new Error('Transaction could not be saved');\n    }\n  }\n\n  convertFromVertupayToTransaction(\n    transactions: Transactions,\n    vertupay: Vertupay,\n  ) {\n    const status =\n      vertupay.transaction_status === 'SUCCESS'\n        ? PaymentStatus.Completed\n        : PaymentStatus.Failed;\n\n    const formattedDateString = vertupay.date_request.replace(/\\//g, '-');\n    const date = new Date(formattedDateString);\n    console.log(date);\n\n    transactions.payment_id = vertupay.transaction_id;\n    transactions.status = status;\n    transactions.amount = vertupay.amount;\n    transactions.transaction_at = date;\n    transactions.currency = vertupay.currency;\n    transactions.payment_type = vertupay.payment_type;\n    transactions.order_no = vertupay.merchant_transaction_id;\n\n    return transactions;\n  }\n\n  async addToQueueFromVertupay(vertupay: Vertupay): Promise {\n    console.log('here is add to transactionQueue for vertupay');\n    await this.transactionQueue.add('fromVertupay', vertupay);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                is_active\n                            \n                            \n                                    \n                                is_deleted\n                            \n                            \n                                    \n                                is_ok\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                roles\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        is_ok\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'simple-array'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\nimport { UserRole } from '../enum/user.role';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column({ type: 'simple-array' })\n  roles: UserRole[];\n\n  @Column({ default: true })\n  is_active: boolean;\n\n  @Column({ default: false })\n  is_deleted: boolean;\n\n  @Column({ default: false })\n  is_ok: boolean;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: Date;\n\n  @Column({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updated_at: Date;\n\n  @Column()\n  age: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersConfig.html":{"url":"injectables/UsersConfig.html","title":"injectable - UsersConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                db\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.config.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DatabaseCredentials\n\n                    \n                \n                    \n                        \n                                Defined in src/users/users.config.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { DatabaseCredentials } from './database.credentials.class';\n\n@Injectable()\nexport class UsersConfig {\n  readonly db: DatabaseCredentials;\n\n  constructor(private configService: ConfigService) {\n    this.db = new DatabaseCredentials(\n      configService.get('DATABASE_USER', ''),\n      configService.get('DATABASE_PASSWORD', ''),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(findAllUserDto: FindAllUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                findAllUserDto\n                                            \n                                                            FindAllUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@CacheTTL(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n  Logger,\n  HttpException,\n  HttpStatus,\n  Inject,\n  UseGuards,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ResponseCode } from '../utility/response.message.code';\nimport { FindAllUserDto } from './dto/find-all-user.dto';\nimport { CACHE_MANAGER, CacheTTL } from '@nestjs/cache-manager';\nimport { Cache } from 'cache-manager';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\n\n@Controller('users')\nexport class UsersController {\n  private readonly logger = new Logger(UsersController.name);\n  constructor(\n    private readonly usersService: UsersService,\n    @Inject(CACHE_MANAGER) private cacheManager: Cache,\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async create(@Body() createUserDto: CreateUserDto) {\n    const user = await this.usersService.create(createUserDto);\n\n    return {\n      success: true,\n      message: `User created successfully`,\n      data: user,\n      code: ResponseCode.SUCCESS,\n    };\n  }\n\n  @Get()\n  async findAll(@Query() findAllUserDto: FindAllUserDto) {\n    this.logger.log('findAll', findAllUserDto);\n\n    let users = await this.cacheManager.get('users.findAll');\n\n    if (users === null) {\n      this.logger.log('cache miss');\n      users = await this.usersService.findAll();\n\n      await this.cacheManager.set('users.findAll', users, 1000 * 60);\n    }\n\n    return {\n      success: true,\n      message: `User found all success.`,\n      data: users,\n      code: ResponseCode.SUCCESS,\n    };\n  }\n  // @CacheKey('custom_key')\n  @Get(':id')\n  @CacheTTL(1000 * 60)\n  async findOne(@Param('id') id: number) {\n    const user = await this.usersService.findOne(id);\n\n    if (user === null) {\n      throw new HttpException(\n        {\n          success: false,\n          message: `User not found`,\n          code: ResponseCode.ERROR,\n        },\n        HttpStatus.NOT_FOUND,\n      );\n    }\n\n    return {\n      success: true,\n      message: `User created successfully`,\n      data: user,\n      code: ResponseCode.SUCCESS,\n    };\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersConfig\n\nUsersConfig\n\nUsersModule -->\n\nUsersConfig->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersConfig\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { UsersConfig } from './users.config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\n\n@Module({\n  imports: [ConfigModule, TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  // inside this module, we can inject other modules\n  providers: [UsersService, UsersConfig],\n  // outside this module, for other module use eg. auth\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByName\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersConfig: UsersConfig, usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersConfig\n                                                  \n                                                        \n                                                                        UsersConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByName\n                        \n                    \n                \n            \n            \n                \nfindByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UsersService.name)\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { UsersConfig } from './users.config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UsersService {\n  private readonly logger = new Logger(UsersService.name);\n\n  constructor(\n    private usersConfig: UsersConfig,\n    @InjectRepository(User)\n    private usersRepository: Repository,\n  ) {}\n\n  async create(createUserDto: CreateUserDto) {\n    // method #1\n    // const user = this.usersRepository.create(createUserDto); // Create a new user instance\n    // await this.usersRepository.save(user); // Save the user to the database\n\n    // method #2\n    const user = new User();\n    user.firstName = createUserDto.firstName;\n    user.lastName = createUserDto.lastName;\n    user.age = createUserDto.age;\n    user.roles = createUserDto.roles;\n    await this.usersRepository.save(user);\n\n    return user;\n  }\n\n  findAll() {\n    this.logger.log('findAll');\n    this.logger.log('db', this.usersConfig.db.DATABASE_USER);\n    return this.usersRepository.find();\n  }\n\n  findOne(id: number) {\n    // this creates 2 log message\n    // example output\n    // nest-app-1  | {\"level\":\"log\",\"pid\":301,\"timestamp\":1744794310853,\"message\":\"this is findOne\",\"context\":\"UsersService\"}\n    // nest-app-1  | {\"level\":\"log\",\"pid\":301,\"timestamp\":1744794310853,\"message\":{\"id\":4433},\"context\":\"UsersService\"}\n    this.logger.log(`this is findOne`, { id: id });\n    return this.usersRepository.findOneBy({ id: id });\n  }\n\n  findByName(name: string) {\n    this.logger.log(`this is findByName`, { name: name });\n    return this.usersRepository.findOneBy({ firstName: name });\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    console.log(updateUserDto);\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilityModule.html":{"url":"modules/UtilityModule.html","title":"module - UtilityModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilityModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utility/utility.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class UtilityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Vertupay.html":{"url":"entities/Vertupay.html","title":"entity - Vertupay","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Vertupay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/entities/vertupay.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                account_name\n                            \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                currency\n                            \n                            \n                                    \n                                date_request\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                merchant_id\n                            \n                            \n                                    \n                                merchant_transaction_id\n                            \n                            \n                                    \n                                payment_type\n                            \n                            \n                                    \n                                transaction_id\n                            \n                            \n                                    \n                                transaction_status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        account_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vertupay/entities/vertupay.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vertupay/entities/vertupay.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vertupay/entities/vertupay.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date_request\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vertupay/entities/vertupay.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vertupay/entities/vertupay.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        merchant_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vertupay/entities/vertupay.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        merchant_transaction_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vertupay/entities/vertupay.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vertupay/entities/vertupay.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transaction_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vertupay/entities/vertupay.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transaction_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vertupay/entities/vertupay.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiListRow } from '../struct/vertupay.pay.dto';\nimport { PaymentType } from '../../transactions/payment.type';\n\n@Entity()\nexport class Vertupay {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  merchant_transaction_id: string;\n\n  @Column()\n  merchant_id: string;\n  @Column()\n  transaction_id: string;\n  @Column()\n  currency: string;\n  @Column()\n  amount: number;\n  @Column()\n  date_request: string;\n  @Column()\n  transaction_status: string;\n  @Column()\n  payment_type: PaymentType;\n  @Column()\n  account_name: string;\n\n  ping(): string {\n    return 'pong';\n  }\n\n  updateFromApiListRow(apiListRow: ApiListRow) {\n    this.merchant_transaction_id = apiListRow.merchantTransactionID;\n    this.merchant_id = apiListRow.merchantID;\n    this.transaction_id = apiListRow.transactionID;\n    this.currency = apiListRow.currency;\n    this.amount = apiListRow.amount;\n    this.date_request = apiListRow.dateRequest;\n    this.transaction_status = apiListRow.transactionStatus;\n    this.payment_type = apiListRow.paymentType;\n    this.account_name = apiListRow.accountName;\n  }\n  static fromApiListRow(apiListRow: ApiListRow): Vertupay {\n    const vertupay = new Vertupay();\n    vertupay.merchant_transaction_id = apiListRow.merchantTransactionID;\n    vertupay.merchant_id = apiListRow.merchantID;\n    vertupay.transaction_id = apiListRow.transactionID;\n    vertupay.currency = apiListRow.currency;\n    vertupay.amount = apiListRow.amount;\n    vertupay.date_request = apiListRow.dateRequest;\n    vertupay.transaction_status = apiListRow.transactionStatus;\n    vertupay.payment_type = apiListRow.paymentType;\n    vertupay.account_name = apiListRow.accountName;\n\n    return vertupay;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VertupayAccountBalanceDto.html":{"url":"classes/VertupayAccountBalanceDto.html","title":"class - VertupayAccountBalanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VertupayAccountBalanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/struct/vertupay.account-balance.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                fundIn\n                            \n                            \n                                    Public\n                                    Readonly\n                                fundOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                all\n                            \n                            \n                                    Static\n                                createFromApiResponse\n                            \n                            \n                                getBalance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fundIn: number, fundOut: number)\n                    \n                \n                        \n                            \n                                Defined in src/vertupay/struct/vertupay.account-balance.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fundIn\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fundOut\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        fundIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/struct/vertupay.account-balance.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        fundOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/struct/vertupay.account-balance.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        all\n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/struct/vertupay.account-balance.dto.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { in: number; out: number; total: number; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        createFromApiResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFromApiResponse(vertupayBalanceResponse: VertupayBalanceResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/struct/vertupay.account-balance.dto.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vertupayBalanceResponse\n                                            \n                                                            VertupayBalanceResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         VertupayAccountBalanceDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance\n                        \n                    \n                \n            \n            \n                \ngetBalance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/struct/vertupay.account-balance.dto.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { VertupayBalanceResponse } from './vertupay.balance-response';\n\nexport class VertupayAccountBalanceDto {\n  constructor(\n    public readonly fundIn: number,\n    public readonly fundOut: number,\n  ) {}\n\n  getBalance(): number {\n    return this.fundIn + this.fundOut;\n  }\n\n  all() {\n    return {\n      in: this.fundIn,\n      out: this.fundOut,\n      total: this.getBalance(),\n    };\n  }\n\n  static createFromApiResponse(\n    vertupayBalanceResponse: VertupayBalanceResponse,\n  ): VertupayAccountBalanceDto {\n    return new VertupayAccountBalanceDto(\n      vertupayBalanceResponse.Content.BalanceFundIn,\n      vertupayBalanceResponse.Content.BalanceFundOut,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VertupayAccountDto.html":{"url":"classes/VertupayAccountDto.html","title":"class - VertupayAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VertupayAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/struct/vertupay.account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                merchantId\n                            \n                            \n                                    Public\n                                    Readonly\n                                passKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSignatureString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(merchantId: string, passKey: string)\n                    \n                \n                        \n                            \n                                Defined in src/vertupay/struct/vertupay.account.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        merchantId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        merchantId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/struct/vertupay.account.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        passKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/struct/vertupay.account.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSignatureString\n                        \n                    \n                \n            \n            \n                \ngetSignatureString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/struct/vertupay.account.dto.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class VertupayAccountDto {\n  constructor(\n    public readonly merchantId: string,\n    public readonly passKey: string,\n  ) {}\n\n  getSignatureString(): string {\n    return `${this.merchantId}${this.passKey}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VertupayAccountFactory.html":{"url":"injectables/VertupayAccountFactory.html","title":"injectable - VertupayAccountFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VertupayAccountFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/vertupay.account-factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAccounts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/vertupay/vertupay.account-factory.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAccounts\n                        \n                    \n                \n            \n            \n                \ncreateAccounts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/vertupay.account-factory.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         VertupayAccountDto[]\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { VertupayAccountDto } from './struct/vertupay.account.dto';\n\n@Injectable()\nexport class VertupayAccountFactory {\n  constructor(private configService: ConfigService) {}\n\n  createAccounts(): VertupayAccountDto[] {\n    const accounts = [];\n    const accountConfigs = [\n      { id: '4D9C07532E', passKey: 'VERTUPAY_P2P_PASS' },\n      { id: '02A9BA0EA9', passKey: 'VERTUPAY_QRIS_PASS' },\n      { id: '320A86AF63', passKey: 'VERTUPAY_VA_PASS' },\n    ];\n\n    for (const { id, passKey } of accountConfigs) {\n      const account = new VertupayAccountDto(\n        id,\n        this.configService.get(passKey, ''),\n      );\n      accounts.push(account);\n    }\n    return accounts;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VertupayApiClient.html":{"url":"injectables/VertupayApiClient.html","title":"injectable - VertupayApiClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VertupayApiClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/vertupay.api-client.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getBalance\n                            \n                            \n                                    Async\n                                getPayoutList\n                            \n                            \n                                hashSignature\n                            \n                            \n                                hasNextPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/vertupay/vertupay.api-client.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBalance(account: VertupayAccountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/vertupay.api-client.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                            VertupayAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPayoutList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPayoutList(account: VertupayAccountDto, start: Date, end: Date, list: ApiListRow[], page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/vertupay.api-client.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                            VertupayAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                start\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                end\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                list\n                                            \n                                                            ApiListRow[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashSignature\n                        \n                    \n                \n            \n            \n                \nhashSignature(signatureString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/vertupay.api-client.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signatureString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasNextPage\n                        \n                    \n                \n            \n            \n                \nhasNextPage(pageNo: number, totalRows: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/vertupay.api-client.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageNo\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                totalRows\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { VertupayAccountDto } from './struct/vertupay.account.dto';\nimport { createHash } from 'crypto';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { VertupayEndpoints } from './struct/vertupay.endpoints';\nimport { VertupayApiError } from './VertupayApiError';\nimport { VertupayBalanceResponse } from './struct/vertupay.balance-response';\nimport { AxiosError } from 'axios';\nimport { VertupayAccountBalanceDto } from './struct/vertupay.account-balance.dto';\nimport { ApiListRow } from './struct/vertupay.pay.dto';\nimport { ListRow, VertupayListResponse } from './struct/vertypay.list-response';\nimport { PaymentType } from '../transactions/payment.type';\n\n@Injectable()\nexport class VertupayApiClient {\n  constructor(private readonly httpService: HttpService) {}\n\n  async getBalance(\n    account: VertupayAccountDto,\n  ): Promise {\n    console.log(account);\n    const signature: string = this.hashSignature(account.getSignatureString());\n    console.log(signature);\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n    const data = {\n      MerchantID: account.merchantId,\n      Signature: signature,\n    };\n\n    try {\n      const { data: response } = await firstValueFrom(\n        this.httpService.post(\n          VertupayEndpoints.PAYIN_BALANCE,\n          data,\n          {\n            headers,\n          },\n        ),\n      );\n\n      // the response look like a class,\n      // but it is plain object,\n      // cannot use response.isSuccess().\n      console.log(response);\n      // return response;\n      return VertupayAccountBalanceDto.createFromApiResponse(response);\n    } catch (error) {\n      const axiosError = error as AxiosError;\n      const status: number = axiosError.status ?? 500;\n      throw new VertupayApiError(\n        `VertupayApiError getBalance: status ${status}`,\n      );\n    }\n  }\n\n  async getPayoutList(\n    account: VertupayAccountDto,\n    start: Date,\n    end: Date,\n    list: ApiListRow[] = [],\n    page: number = 1,\n  ): Promise {\n    const signature: string = this.hashSignature(account.getSignatureString());\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n    const data = {\n      MerchantID: account.merchantId,\n      Signature: signature,\n      DateStart: start.toISOString(),\n      DateEnd: end.toISOString(),\n      Page: page,\n    };\n\n    try {\n      const { data: response } = await firstValueFrom(\n        this.httpService.post(\n          VertupayEndpoints.PAYOUT_LIST,\n          data,\n          { headers },\n        ),\n      );\n\n      const { Content: body } = response;\n\n      // can using map ... see below\n      // for (const data of body.Data) {\n      //   list.push(\n      //     ApiListRow.createFromApiResponse(data, VertupayPaymentType.Withdraw),\n      //   );\n      // }\n\n      console.log(body);\n\n      // using map\n      const apiRows: ApiListRow[] = body.Data.map(\n        (data: ListRow): ApiListRow =>\n          ApiListRow.createFromApiResponse(data, PaymentType.Withdraw),\n      );\n      list.push(...apiRows);\n\n      if (this.hasNextPage(body.Page, body.TotalRows)) {\n        return await this.getPayoutList(account, start, end, list, page + 1);\n      }\n\n      return list;\n    } catch (error) {\n      const axiosError = error as AxiosError;\n      const status: number = axiosError.status ?? 500;\n      throw new VertupayApiError(\n        `VertupayApiError getPayoutList: status ${status}`,\n      );\n    }\n  }\n\n  hashSignature(signatureString: string) {\n    console.log(signatureString);\n    const hash = createHash('sha512');\n    hash.update(signatureString);\n    return hash.digest('hex').toUpperCase(); // Convert to uppercase\n  }\n\n  hasNextPage(pageNo: number, totalRows: number): boolean {\n    const rowPerPage = 100;\n    const totalPages = Math.ceil(totalRows / rowPerPage);\n    return pageNo \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VertupayApiError.html":{"url":"classes/VertupayApiError.html","title":"class - VertupayApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VertupayApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/VertupayApiError.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/vertupay/VertupayApiError.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class VertupayApiError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'VertupayApiError';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VertupayBalanceResponse.html":{"url":"interfaces/VertupayBalanceResponse.html","title":"interface - VertupayBalanceResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VertupayBalanceResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/struct/vertupay.balance-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Content\n                                        \n                                \n                                \n                                        \n                                            ErrorMessage\n                                        \n                                \n                                \n                                        \n                                            ResultCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Content:         VertupayFundInOut\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VertupayFundInOut\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ErrorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ErrorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ResultCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ResultCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface VertupayBalanceResponse {\n  Content: VertupayFundInOut;\n  ResultCode: number;\n  ErrorMessage: string;\n}\n\nexport interface VertupayFundInOut {\n  BalanceFundIn: number;\n  BalanceFundOut: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VertupayController.html":{"url":"controllers/VertupayController.html","title":"controller - VertupayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VertupayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/vertupay.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                vertupay\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getBalance\n                            \n                            \n                                    \n                                    Async\n                                getPayoutList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBalance()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/vertupay/vertupay.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getPayoutList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPayoutList()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/payout')\n                \n            \n\n                    \n                        \n                            Defined in src/vertupay/vertupay.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpException, HttpStatus } from '@nestjs/common';\nimport { VertupayService } from './vertupay.service';\nimport { ResponseCode } from '../utility/response.message.code';\nimport { VertupayApiError } from './VertupayApiError';\nimport { VertupayAccountBalanceDto } from './struct/vertupay.account-balance.dto';\nimport { ApiListRow } from './struct/vertupay.pay.dto';\nimport { VertupayAccountDto } from './struct/vertupay.account.dto';\n\n@Controller('vertupay')\nexport class VertupayController {\n  constructor(private readonly vertupayService: VertupayService) {}\n\n  @Get()\n  async getBalance() {\n    const accounts = this.vertupayService.getAccounts();\n\n    try {\n      const balance: VertupayAccountBalanceDto =\n        await this.vertupayService.getBalance(accounts[0]);\n      console.log(balance);\n      console.log(typeof balance);\n      return {\n        success: true,\n        message: `Balance found success.`,\n        data: balance.all(),\n        code: ResponseCode.SUCCESS,\n      };\n    } catch (error) {\n      const customError = error as VertupayApiError;\n      throw new HttpException(\n        {\n          success: false,\n          message: customError.message,\n          code: ResponseCode.ERROR,\n        },\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  @Get('/payout')\n  async getPayoutList() {\n    const accounts: VertupayAccountDto[] = this.vertupayService.getAccounts();\n    const end = new Date();\n    const start = new Date(end.getTime() - 2 * 24 * 60 * 60 * 1000);\n    let payoutList: ApiListRow[];\n    try {\n      payoutList = await this.vertupayService.getPayoutList(\n        accounts[0],\n        start,\n        end,\n      );\n    } catch (error) {\n      const customError = error as VertupayApiError;\n      throw new HttpException(\n        {\n          success: false,\n          message: customError.message,\n          code: ResponseCode.ERROR,\n        },\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n\n    try {\n      await this.vertupayService.upsertPaylist(payoutList);\n      return {\n        success: true,\n        message: `Payout List successful.`,\n        data: payoutList,\n        code: ResponseCode.SUCCESS,\n      };\n    } catch (error) {\n      console.log(error);\n      throw new HttpException(\n        {\n          success: false,\n          message: 'db error',\n          code: ResponseCode.ERROR,\n        },\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VertupayFundInOut.html":{"url":"interfaces/VertupayFundInOut.html","title":"interface - VertupayFundInOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VertupayFundInOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/struct/vertupay.balance-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            BalanceFundIn\n                                        \n                                \n                                \n                                        \n                                            BalanceFundOut\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        BalanceFundIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BalanceFundIn:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BalanceFundOut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BalanceFundOut:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface VertupayBalanceResponse {\n  Content: VertupayFundInOut;\n  ResultCode: number;\n  ErrorMessage: string;\n}\n\nexport interface VertupayFundInOut {\n  BalanceFundIn: number;\n  BalanceFundOut: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VertupayListResponse.html":{"url":"interfaces/VertupayListResponse.html","title":"interface - VertupayListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VertupayListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/struct/vertypay.list-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Content\n                                        \n                                \n                                \n                                        \n                                            ErrorMessage\n                                        \n                                \n                                \n                                        \n                                            ResultCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Content:         ListContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ErrorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ErrorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ResultCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ResultCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface VertupayListResponse {\n  Content: ListContent;\n  ResultCode: number;\n  ErrorMessage: string;\n}\n\nexport interface ListContent {\n  Page: number;\n  TotalRows: number;\n  Data: ListRow[];\n}\n\nexport interface ListRow {\n  MerchantTransactionID: string;\n  MerchantID: string;\n  TransactionID: string;\n  Currency: string;\n  Amount: number;\n  DateRequest: string;\n  TransactionStatus: string;\n  BankCode: string;\n  BankName: string;\n  BankAccountNo: string;\n  BankAccountName: string;\n  BankBranch: string;\n  BankCity: string;\n  BankProvince: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VertupayModule.html":{"url":"modules/VertupayModule.html","title":"module - VertupayModule","body":"\n                   \n\n\n\n\n    Modules\n    VertupayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VertupayModule\n\n\n\ncluster_VertupayModule_providers\n\n\n\n\nVertupayAccountFactory\n\nVertupayAccountFactory\n\n\n\nVertupayModule\n\nVertupayModule\n\nVertupayModule -->\n\nVertupayAccountFactory->VertupayModule\n\n\n\n\n\nVertupayApiClient\n\nVertupayApiClient\n\nVertupayModule -->\n\nVertupayApiClient->VertupayModule\n\n\n\n\n\nVertupayService\n\nVertupayService\n\nVertupayModule -->\n\nVertupayService->VertupayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/vertupay/vertupay.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VertupayAccountFactory\n                        \n                        \n                            VertupayApiClient\n                        \n                        \n                            VertupayService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VertupayController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VertupayService } from './vertupay.service';\nimport { VertupayAccountFactory } from './vertupay.account-factory';\nimport { ConfigModule } from '@nestjs/config';\nimport { VertupayController } from './vertupay.controller';\nimport { VertupayApiClient } from './vertupay.api-client';\nimport { HttpModule } from '@nestjs/axios';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Vertupay } from './entities/vertupay.entity';\n\n@Module({\n  imports: [ConfigModule, HttpModule, TypeOrmModule.forFeature([Vertupay])],\n  providers: [VertupayService, VertupayAccountFactory, VertupayApiClient],\n  controllers: [VertupayController],\n})\nexport class VertupayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VertupayPayCreatedEvent.html":{"url":"classes/VertupayPayCreatedEvent.html","title":"class - VertupayPayCreatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VertupayPayCreatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/events/vertupay.pay-created.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                pay\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pay: Vertupay)\n                    \n                \n                        \n                            \n                                Defined in src/vertupay/events/vertupay.pay-created.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pay\n                                                  \n                                                        \n                                                                        Vertupay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        pay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vertupay\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/events/vertupay.pay-created.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Vertupay } from '../entities/vertupay.entity';\n\nexport class VertupayPayCreatedEvent {\n  constructor(public readonly pay: Vertupay) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VertupayPayUpdatedEvent.html":{"url":"classes/VertupayPayUpdatedEvent.html","title":"class - VertupayPayUpdatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VertupayPayUpdatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/events/vertupay.pay-updated.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                pay\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pay: Vertupay)\n                    \n                \n                        \n                            \n                                Defined in src/vertupay/events/vertupay.pay-updated.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pay\n                                                  \n                                                        \n                                                                        Vertupay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        pay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vertupay\n\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/events/vertupay.pay-updated.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Vertupay } from '../entities/vertupay.entity';\n\nexport class VertupayPayUpdatedEvent {\n  constructor(public readonly pay: Vertupay) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VertupayService.html":{"url":"injectables/VertupayService.html","title":"injectable - VertupayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VertupayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vertupay/vertupay.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccounts\n                            \n                            \n                                    Async\n                                getBalance\n                            \n                            \n                                    Async\n                                getPayoutList\n                            \n                            \n                                    Async\n                                handleCron\n                            \n                            \n                                    Async\n                                upsertPaylist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vertupayAccountFactory: VertupayAccountFactory, vertupayApiClient: VertupayApiClient, vertupayRepository: Repository, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/vertupay/vertupay.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vertupayAccountFactory\n                                                  \n                                                        \n                                                                        VertupayAccountFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vertupayApiClient\n                                                  \n                                                        \n                                                                        VertupayApiClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vertupayRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAccounts\n                        \n                    \n                \n            \n            \n                \ngetAccounts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/vertupay.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         VertupayAccountDto[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBalance(account: VertupayAccountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/vertupay.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                            VertupayAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPayoutList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPayoutList(account: VertupayAccountDto, start: Date, end: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/vertupay.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                            VertupayAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleCron()\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/vertupay.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        upsertPaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsertPaylist(list: ApiListRow[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/vertupay/vertupay.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                list\n                                            \n                                                            ApiListRow[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(VertupayService.name)\n                    \n                \n                    \n                        \n                                Defined in src/vertupay/vertupay.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { VertupayAccountFactory } from './vertupay.account-factory';\nimport { VertupayAccountDto } from './struct/vertupay.account.dto';\nimport { VertupayApiClient } from './vertupay.api-client';\nimport { VertupayAccountBalanceDto } from './struct/vertupay.account-balance.dto';\nimport { ApiListRow } from './struct/vertupay.pay.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Vertupay } from './entities/vertupay.entity';\nimport { In } from 'typeorm';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { VertupayListEvents } from './events/vertupay.events';\nimport { VertupayPayUpdatedEvent } from './events/vertupay.pay-updated.event';\nimport { VertupayPayCreatedEvent } from './events/vertupay.pay-created.event';\n//import { Cron, CronExpression } from '@nestjs/schedule'; // Ensure you import In if using TypeORM\n\n@Injectable()\nexport class VertupayService {\n  private readonly logger = new Logger(VertupayService.name);\n\n  constructor(\n    private readonly vertupayAccountFactory: VertupayAccountFactory,\n    private readonly vertupayApiClient: VertupayApiClient,\n    @InjectRepository(Vertupay)\n    private vertupayRepository: Repository,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  getAccounts(): VertupayAccountDto[] {\n    return this.vertupayAccountFactory.createAccounts();\n  }\n\n  async getBalance(\n    account: VertupayAccountDto,\n  ): Promise {\n    return await this.vertupayApiClient.getBalance(account);\n  }\n\n  async getPayoutList(\n    account: VertupayAccountDto,\n    start: Date,\n    end: Date,\n  ): Promise {\n    return await this.vertupayApiClient.getPayoutList(account, start, end);\n  }\n\n  async upsertPaylist(list: ApiListRow[]): Promise {\n    // Extract transaction IDs from the input list\n    const transactionIds = list.map((row: ApiListRow) => row.transactionID);\n\n    // Fetch existing rows from the database\n    const dbRows = await this.vertupayRepository.find({\n      where: {\n        transaction_id: In(transactionIds),\n      },\n    });\n\n    // Create a map for quick lookup of existing rows\n    const existingRowsMap = new Map(\n      dbRows.map((row: Vertupay) => [row.transaction_id, row]),\n    );\n\n    // Prepare arrays for updates and inserts\n    const toUpdate: Vertupay[] = [];\n    const toInsert: Vertupay[] = [];\n\n    for (const item of list) {\n      if (existingRowsMap.has(item.transactionID)) {\n        // Update case\n        const dbRow = existingRowsMap.get(item.transactionID);\n        if (dbRow) {\n          dbRow.updateFromApiListRow(item); // Update fields\n          toUpdate.push(dbRow);\n        }\n      } else {\n        // Insert case\n        toInsert.push(Vertupay.fromApiListRow(item));\n      }\n    }\n\n    // Perform batch updates and inserts\n    if (toUpdate.length > 0) {\n      console.log(`-------------- toUpdate: ${toUpdate.length}`);\n      await this.vertupayRepository.save(toUpdate);\n      toUpdate.forEach((row: Vertupay) =>\n        this.eventEmitter.emit(\n          VertupayListEvents.Update,\n          new VertupayPayUpdatedEvent(row),\n        ),\n      );\n    }\n\n    if (toInsert.length > 0) {\n      console.log(`-------------- toInsert: ${toInsert.length}`);\n      await this.vertupayRepository.insert(toInsert);\n      toInsert.forEach((row: Vertupay) =>\n        this.eventEmitter.emit(\n          VertupayListEvents.Create,\n          new VertupayPayCreatedEvent(row),\n        ),\n      );\n    }\n    // insert() can batch vs save() is one by one\n    // await this.vertupayRepository.insert(rows);\n  }\n\n  // @Cron(CronExpression.EVERY_10_MINUTES)\n  async handleCron() {\n    this.logger.debug('Called when the current second is 45');\n\n    const accounts: VertupayAccountDto[] = this.getAccounts();\n    const end = new Date();\n    const start = new Date(end.getTime() - 2 * 24 * 60 * 60 * 1000);\n\n    const payoutList = await this.getPayoutList(accounts[0], start, end);\n    await this.upsertPaylist(payoutList);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/middlewares/logger.times.middleware.ts\n            \n            injectable\n            LoggerTimesMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/redis.options.ts\n            \n            variable\n            RedisOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/transactions/entities/transactions.entity.ts\n            \n            entity\n            Transactions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/transactions/listeners/pay.vertupay.listener.ts\n            \n            injectable\n            PayVertupayListener\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/transactions/transactions.processor.ts\n            \n            class\n            TransactionsProcessor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/transactions/transactions.service.ts\n            \n            injectable\n            TransactionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/database.credentials.class.ts\n            \n            class\n            DatabaseCredentials\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/find-all-user.dto.ts\n            \n            class\n            FindAllUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.config.ts\n            \n            injectable\n            UsersConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/vertupay/VertupayApiError.ts\n            \n            class\n            VertupayApiError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/vertupay/entities/vertupay.entity.ts\n            \n            entity\n            Vertupay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/vertupay/events/vertupay.pay-created.event.ts\n            \n            class\n            VertupayPayCreatedEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/vertupay/events/vertupay.pay-updated.event.ts\n            \n            class\n            VertupayPayUpdatedEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/vertupay/struct/vertupay.account-balance.dto.ts\n            \n            class\n            VertupayAccountBalanceDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/vertupay/struct/vertupay.account.dto.ts\n            \n            class\n            VertupayAccountDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/vertupay/struct/vertupay.balance-response.ts\n            \n            interface\n            VertupayBalanceResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/vertupay/struct/vertupay.balance-response.ts\n            \n            interface\n            VertupayFundInOut\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/vertupay/struct/vertupay.endpoints.ts\n            \n            variable\n            VertupayEndpoints\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/vertupay/struct/vertupay.pay.dto.ts\n            \n            class\n            ApiListRow\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/vertupay/struct/vertypay.list-response.ts\n            \n            interface\n            ListContent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/vertupay/struct/vertypay.list-response.ts\n            \n            interface\n            ListRow\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/vertupay/struct/vertypay.list-response.ts\n            \n            interface\n            VertupayListResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/vertupay/vertupay.account-factory.ts\n            \n            injectable\n            VertupayAccountFactory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/vertupay/vertupay.api-client.ts\n            \n            injectable\n            VertupayApiClient\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/vertupay/vertupay.controller.ts\n            \n            controller\n            VertupayController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/vertupay/vertupay.service.ts\n            \n            injectable\n            VertupayService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @keyv/redis : ^4.3.4\n        \n            @nestjs/axios : ^4.0.0\n        \n            @nestjs/bullmq : ^11.0.2\n        \n            @nestjs/cache-manager : ^3.0.1\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/event-emitter : ^3.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/schedule : ^6.0.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            axios : ^1.9.0\n        \n            bullmq : ^5.52.1\n        \n            cache-manager : ^6.4.2\n        \n            cache-manager-redis-store : ^3.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            mysql2 : ^3.14.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.22\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PaymentStatus   (src/.../payment.type.ts)\n                        \n                        \n                            PaymentType   (src/.../payment.type.ts)\n                        \n                        \n                            ResponseCode   (src/.../response.message.code.ts)\n                        \n                        \n                            UserRole   (src/.../user.role.ts)\n                        \n                        \n                            VertupayListEvents   (src/.../vertupay.events.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/transactions/payment.type.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentStatus\n                    \n                \n                        \n                            \n                                 Completed\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n                        \n                            \n                                 Failed\n                            \n                        \n                        \n                            \n                                Value : Failed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PaymentType\n                    \n                \n                        \n                            \n                                 Deposit\n                            \n                        \n                        \n                            \n                                Value : deposit\n                            \n                        \n                        \n                            \n                                 Withdraw\n                            \n                        \n                        \n                            \n                                Value : withdraw\n                            \n                        \n            \n        \n\n    src/utility/response.message.code.ts\n    \n        \n            \n                \n                    \n                        \n                        ResponseCode\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : 10000\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 20000\n                            \n                        \n            \n        \n\n    src/users/enum/user.role.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 MEMBER\n                            \n                        \n                        \n                            \n                                Value : member\n                            \n                        \n            \n        \n\n    src/vertupay/events/vertupay.events.ts\n    \n        \n            \n                \n                    \n                        \n                        VertupayListEvents\n                    \n                \n                        \n                            \n                                 Update\n                            \n                        \n                        \n                            \n                                Value : vertupay.pay.update\n                            \n                        \n                        \n                            \n                                 Create\n                            \n                        \n                        \n                            \n                                Value : vertupay.pay.create\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MiddlewaresModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilityModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VertupayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_TransactionsModule\n\n\n\ncluster_TransactionsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_VertupayModule\n\n\n\ncluster_VertupayModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nMiddlewaresModule\n\nMiddlewaresModule\n\nAppModule -->\n\nMiddlewaresModule->AppModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nAppModule -->\n\nTransactionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nAppModule -->\n\nUtilityModule->AppModule\n\n\n\n\n\nVertupayModule\n\nVertupayModule\n\nAppModule -->\n\nVertupayModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nPayVertupayListener\n\nPayVertupayListener\n\nTransactionsModule -->\n\nPayVertupayListener->TransactionsModule\n\n\n\n\n\nTransactionsService\n\nTransactionsService\n\nTransactionsModule -->\n\nTransactionsService->TransactionsModule\n\n\n\n\n\nUsersConfig\n\nUsersConfig\n\nUsersModule -->\n\nUsersConfig->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nVertupayAccountFactory\n\nVertupayAccountFactory\n\nVertupayModule -->\n\nVertupayAccountFactory->VertupayModule\n\n\n\n\n\nVertupayApiClient\n\nVertupayApiClient\n\nVertupayModule -->\n\nVertupayApiClient->VertupayModule\n\n\n\n\n\nVertupayService\n\nVertupayService\n\nVertupayModule -->\n\nVertupayService->VertupayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            RedisOptions   (src/.../redis.options.ts)\n                        \n                        \n                            VertupayEndpoints   (src/.../vertupay.endpoints.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret:\n    'DO NOT USE THIS VALUE. INSTEAD, CREATE A COMPLEX SECRET AND KEEP IT SAFE OUTSIDE OF THE SOURCE CODE.',\n}\n                    \n                \n\n\n        \n    \n\n    src/redis.options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RedisOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CacheModuleAsyncOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  isGlobal: true,\n  imports: [ConfigModule],\n  useFactory: async (configService: ConfigService) => {\n    const store = await redisStore({\n      socket: {\n        host: configService.get('REDIS_HOST', 'redis'),\n        port: parseInt(configService.get('REDIS_PORT', '6379')),\n      },\n    });\n    return {\n      store: () => store,\n      isGlobal: true,\n    };\n  },\n  inject: [ConfigService],\n}\n                    \n                \n\n\n        \n    \n\n    src/vertupay/struct/vertupay.endpoints.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        VertupayEndpoints\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  PAYIN_BALANCE: 'https://api.dylamicapi.com/fund_in/balance.api',\n  PAYIN_LIST: 'https://api.dylamicapi.com/fund_in/transaction_detail.api',\n  PAYOUT_LIST: 'https://api.dylamicapi.com/fund_out/transaction_detail.api',\n} as const\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
